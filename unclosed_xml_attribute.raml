#%RAML 0.8
title: First Test API
version: 0.1
#baseUri: http://dkt928354:8089
baseUri: http://mocksvc.mulesoft.com/mocks/7b37a447-e7fc-4b11-b141-35210205a707
/products:
  displayName: Products
  get:
    description: Get a list of Products
    responses:
      200:
        body:
          application/json:
            example: |
              [
                {
                  "productCode": "TS",
                  "size": "S",
                  "description": "Small item",
                  "count": 30
                },
                {
                  "productCode": "TS",
                  "size": "M",
                  "description": "Medium item",
                  "count": 25
                }
              ]
          application/xml:
            example: |
              <products>
                <product>
                  <productCode>TS</productCode>
                    <size>S</size>
                    <description>Small item</description>
                    <count>30</count>
                </product>
              <products>
/orders:
  displayName: Orders
  post:
    description: Enter an Order
    body:
      application/json:
        example: |
          {
            "size": "M",
            "email": "robin@mail.com",
            "name": "Robin Pille",
            "address1": "77 Geary St.",
            "address2": "Apt 7",
            "city": "San Francisco",
            "stateOrProvince": "CA",
            "country": "US",
            "postalCode": "94131"
          }
        schema: |
          {
            "type": "object",
            "$schema": "http://json-schema.org/draft-03/schema",
            "id": "http://jsonschema.net",
            "required": true,
            "properties": {
              "address1": {
                  "type": "string",
                  "id": "http://jsonschema.net/address1",
                  "required": true
              },
              "address2": {
                  "type": "string",
                  "id": "http://jsonschema.net/address2",
                  "required": true
              },
              "city": {
                  "type": "string",
                  "id": "http://jsonschema.net/city",
                  "required": true
              },
              "country": {
                  "type": "string",
                  "id": "http://jsonschema.net/country",
                  "required": true
              },
              "email": {
                  "type": "string",
                  "format": "email",
                  "id": "http://jsonschema.net/email",
                  "required": true
              },
              "name": {
                  "type": "string",
                  "id": "http://jsonschema.net/name",
                  "required": true
              },
              "size": {
                  "type": "string",
                  "enum": ["S", "M", "L", "XL", "XXL"],
                  "id": "http://jsonschema.net/size",
                  "required": true
              },
              "stateOrProvince": {
                  "type": "string",
                  "id": "http://jsonschema.net/stateOrProvince",
                  "required": true
              },
              "postalCode": {
                "type": "string",
                "id": "http://jsonschema.net/postalCode",
                "required": true
              }
            }
          }              
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "orderId": "1234"
              }
      500:
        body:
          application/json:
            example: |
              {
                "error": "something went wrong"
              }
  /{orderId}/status:
    displayName: Status
    get:
      description: Get an Order Status
      queryParameters:
        email:
          description:  Retrieve the status of an order with the same email that was used to place the order
          pattern: ^[_a-z0-9-]+(\.[_a-z0-9-]+)*@[a-z0-9-]+(\.[a-z0-9-]+)*(\.[a-z]{2,4})$
          required: true
      responses:
        200:
          body:
            application/json:
              example: |
                {
                  "orderId": "1234",
                  "status": "delivered",
                  "size": "M"
                }
        400:
          body:
            application/json:
              example: |
                {
                  "message": "Cannot find order"
                }
  
  
