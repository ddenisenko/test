#%RAML 0.8
---
title: streaming API
baseUri: http://api.7digital.com/1.2
version: 1
securedBy: [consumer_key]

securitySchemes:
  - consumer_key:
      description: API key only
      type: x-OAuth-open
      describedBy:
        queryParameters:
          oauth_consumer_key:            
            example: YOUR_KEY_HERE
            description: |
              Your 7digital API key
  - oauth_1_0:
      description: OAuth 1.0
      type: OAuth 1.0
      describedBy:
        headers:
          Authorization:
            description: |
              Used to send a valid OAuth access token. Do not use with the "oauth_access_token" query string parameter.
            type: string
        queryParameters:
          oauth_consumer_key:
            description: |
              Your 7digital API key
      settings:
        requestTokenUri: https://api.7digital.com
        authorizationUri: https://account.7digital.com
        tokenCredentialsUri: https://api.7digital.com

/status:

  get:
    description: |
            This method returns the current server time.
    securedBy: [oauth_1_0]
    queryParameters:
      country:
        type: string
        required: true
        description: |
                Two-letter country code.


    responses:
      200:
        body:
          application/xml:
            example: |
              <response status="ok" version="1.2">
                <serviceStatus>
                  <serverTime>2012-02-08T15:46:06Z</serverTime>
                </serviceStatus>
              </response>
/artist/browse:

  get:
    description: |
            This method returns a list of artists from the 7digital catalogue whose names match the start letter(s) supplied.
    queryParameters:
      letter:
        type: string
        required: true
        description: |
                The first letter(s) of the artist name to browse.


    responses:
      200:
        body:
          application/xml:
            example: |
              <response status="ok" version="1.2">
                <artists>
                  <page>1</page>
                  <pageSize>10</pageSize>
                  <totalItems>3256</totalItems>
                  <artist id="144641">
                    <name>P J Harvey</name>
                    <url>http://www.7digital.com/artists/p-j-harvey/?partner=1401</url>
                    <sortName>P J Harvey</sortName>
                    <image>http://artwork-cdn.7static.com/static/img/artistimages/00/001/446/0000144641_50.jpg</image>
                  </artist>
                  <artist id="17168">
                    <name>P J Proby</name>
                     ...
                  </artist>
                   ...
                </artists>
              </response>
          application/json:
            example: |  
              {
                  "status": "ok",
                  "version": "1.2",
                  "artists": {
                      "page": 1,
                      "pageSize": 10,
                      "totalItems": 23817,
                      "artist": [
                          {
                              "id": 314018,
                              "name": "P & P",
                              "sortName": "P & P",
                              "url": "http://www.7digital.com/artist/p-and-p/?partner=1401",
                              "image": "http://artwork-cdn.7static.com/static/img/artistimages/00/003/140/0000314018_150.jpg",
                              "popularity": 0.29
                          },
                          ...
                      ]
                  }
              }
/artist/chart:

  get:
    description: |
            This method returns a chart of the most purchased artists for given period. To retrieve the most recent charts as published on 7digital.com period and toDate parameter should be omitted (the default values will be used).
    queryParameters:
      period:
        enum: [test]
        required: false
        description: |
                The time period for which the chart is generated. Default value is a week.
      toDate:
        type: date
        required: false
        description: |
                The last day the chart should include data for. If not provided, by default the most recent chart for requested period will be returned.


    responses:
      200:
        body:
          application/xml:
            example: |
              <response status="ok" version="1.2">
              	<chart>
              		<page>1</page>
              		<pageSize>2</pageSize>
              		<totalItems>100</totalItems>
              		<type>artist</type>
              		<fromDate>2013-11-25T00:00:00+00:00</fromDate>
              		<toDate>2013-12-01T00:00:00+00:00</toDate>
              		<chartItem>
              			<position>1</position>
              			<change>New</change>
              			<artist id="276">
              				<name>McFly</name>
              				<url>http://www.7digital.com/artist/mcfly/?partner=1401</url>
              			</artist>
              		</chartItem>
              		<chartItem>
              			<position>2</position>
              			<change>New</change>
              			<artist id="386">
              				<name>Robbie Williams</name>
              				<url>http://www.7digital.com/artist/robbie-williams/?partner=1401</url>
              			</artist>
              		</chartItem>
              	</chart>
              </response>
                      
          application/json:
            example: |  
              {
              	"status" : "ok",
              	"version" : "1.2",
              	"chart" : {
              		"page" : 1,
              		"pageSize" : 2,
              		"totalItems" : 100,
              		"type" : "artist",
              		"fromDate" : "2013-11-25T00:00:00+00:00",
              		"toDate" : "2013-12-01T00:00:00+00:00",
              		"chartItem" : [{
              				"position" : 1,
              				"change" : "New",
              				"artist" : {
              					"id" : 276,
              					"name" : "McFly",
              					"appearsAs" : null,
              					"url" : "http://www.7digital.com/artist/mcfly/?partner=1401"
              				}
              			}, {
              				"position" : 2,
              				"change" : "New",
              				"artist" : {
              					"id" : 386,
              					"name" : "Robbie Williams",
              					"appearsAs" : null,
              					"url" : "http://www.7digital.com/artist/robbie-williams/?partner=1401"
              				}
              			}
              		]
              	}
              }
/artist/details:

  get:
    description: |
            ; This method returns all available artist details.; 
    queryParameters:
      artistId:
        type: integer
        required: true
        description: |
                unique identifier of the artist


    responses:
      200:
        body:
          application/xml:
            example: |
              <response status="ok" version="1.2">
                <artist id="1">
                  <name>Keane</name> 
                  <sortName>Keane</sortName> 
                  <url>http://www.7digital.com/artists/keane/</url> 
                  <image>http://artwork-cdn.7static.com/static/img/artistimages/00/000/000/0000000001_150.jpg</image> 
                  <bio>
                    <text/>
                  </bio>
                </artist>
              </response>
          application/json:
            example: |  
              {
                "status": "ok",
                "version": "1.2",
                "artist": {
                  "id": 1,
                  "name": "Keane",
                  "sortName": "Keane",
                  "url": "http://www.7digital.com/artist/keane/",
                  "image": "http://artwork-cdn.7static.com/static/img/artistimages/00/000/000/0000000001_150.jpg",
                  "bio": {
                    "text": ""
                  }
                }
              }
/artist/releases:

  get:
    description: |
            This method returns a list of releases by given artist. Releases can be filtered by type.
    queryParameters:
      artistId:
        type: integer
        required: true
        description: |
                The unique identifier of the artist.
      type:
        enum: [test]
        required: false
        description: |
                Releases can be of type album, single or video. If specified, results are filtered by release type.
      streamable:
        type: boolean
        required: false
        description: |
                If provided search results will contain only releases that can/cannot be streamed
      country:
        type: string
        required: false
        description: |
                ; 2 letter ISO country code of the country whose releases you would like to search; 
      page:
        type: integer
        required: false
        description: |
                Page number of the result set. If not supplied, defaults to 1
      pageSize:
        type: integer
        required: false
        description: |
                Number of items to be returned per page. If not supplied this defaults to 10. Maximum page size is 50
      imageSize:
        type: integer
        required: false
        description: |
                ; The requested width of the image in pixels; 


    responses:
      200:
        body:
          application/xml:
            example: |
              <response status="ok" version="1.2" xsi:noNamespaceSchemaLocation="http://api.7digital.com/1.2/static/7digitalAPI.xsd">
                <releases>
                  <page>1</page>
                  <pageSize>1</pageSize>
                  <totalItems>65</totalItems>
                  <release id="2164036">
                    <title>Sovereign Light Caf√©</title>
                    <version/>
                    <type>Single</type>
                    <barcode>8712944436549</barcode>
                    <year>2013</year>
                    <explicitContent>false</explicitContent>
                    <artist id="1">
                      <name>Keane</name>
                      <appearsAs>Keane</appearsAs>
                      <url>http://www.7digital.com/artist/keane/?partner=1401</url>
                    </artist>
                    <url>http://www.7digital.com/artist/keane/release/sovereign-light-cafe-1/?partner=1401</url>
                    <image>http://artwork-cdn.7static.com/static/img/sleeveart/00/021/640/0002164036_50.jpg</image>
                    <releaseDate>2013-01-07T00:00:00+00:00</releaseDate>
                    <price>
                      <currency code="GBP">¬£</currency>
                      <value>0.99</value>
                      <formattedPrice>¬£0.99</formattedPrice>
                      <rrp>0.00</rrp>
                      <formattedRrp>¬£0.00</formattedRrp>
                      <onSale>true</onSale>
                    </price>
                    <formats availableDrmFree="true">
                      <format id="17">
                        <fileFormat>MP3</fileFormat>
                        <bitRate>320</bitRate>
                        <drmFree>true</drmFree>
                      </format>
                      <format id="33">
                        <fileFormat>MP4</fileFormat>
                        <bitRate>320</bitRate>
                        <drmFree>true</drmFree>
                      </format>
                    </formats>
                    <label id="63779">
                      <name>Wall Recordings</name>
                    </label>
                    <popularity>0.3</popularity>
                    <streamingReleaseDate>3001-01-01T00:00:00+00:00</streamingReleaseDate>
                    <duration>376</duration>
                    <trackCount>1</trackCount>
                  </release>
                  ...
                </releases>
              </response>
          application/json:
            example: |  
              {
              "status": "ok",
              "version": "1.2",
              "releases": {
                  "page": 1,
                  "pageSize": 2,
                  "totalItems": 1,
                  "release": [
                      {
                          "id": 10883,
                          "title": "Stagefright",
                          "version": "",
                          "type": "Album",
                          "barcode": "803680713402",
                          "year": 2003,
                          "explicitContent": false,
                          "artist": {
                              "id": 8054,
                              "name": "October 31st",
                              "appearsAs": "October 31st",
                              "url": "http://www.7digital.com/artist/october-31st/?partner=1401"
                          },
                          "url": "http://www.7digital.com/artist/october-31st/release/stagefright/?partner=1401",
                          "image": "http://artwork-cdn.7static.com/static/img/sleeveart/00/000/108/0000010883_50.jpg",
                          "releaseDate": "2004-11-16T00:00:00+00:00",
                          "price": {
                              "currency": {
                                  "code": "GBP",
                                  "symbol": "¬£"
                              },
                              "value": "7.99",
                              "formattedPrice": "¬£7.99",
                              "rrp": "7.99",
                              "formattedRrp": "¬£7.99",
                              "onSale": false
                          },
                          "formats": [
                              {
                                  "id": 6,
                                  "fileFormat": "MP3",
                                  "bitRate": 192,
                                  "drmFree": true
                              },
                              {
                                  "id": 2,
                                  "fileFormat": "MP4",
                                  "bitRate": 192,
                                  "drmFree": true
                              }
                          ],
                          "label": {
                              "id": "492",
                              "name": "Crash Music"
                          },
                          "popularity": 0.28,
                          "streamingReleaseDate": "2004-11-16T00:00:00+00:00",
                          "duration": 2815,
                          "trackCount": 9
                      }
                  ]
              }
              }
/artist/search:

  get:
    description: |
            This method returns a list of artists from the 7digital catalogue that match the search query.
    queryParameters:
      q:
        type: string
        required: true
        description: |
                The search query string.
      sort:
        type: string
        required: false
        description: |
                ; Orders the returned results. Supplied as a string in the format: "{sortColumn} {sortOrder}", for example: "popularity desc" will show most popular artists first regardless of search match score. Currently you can sort by name, popularity and score. If no sort is; supplied, the default is "score desc". If no order is supplied the default is ascending.; 
      streamable:
        type: boolean
        required: false
        description: |
                If provided search results will contain only artists that can/cannot be streamed
      country:
        type: string
        required: false
        description: |
                ; 2 letter ISO country code of the country whose artists you would like to search; 
      page:
        type: integer
        required: false
        description: |
                Page number of the result set. If not supplied, defaults to 1
      pageSize:
        type: integer
        required: false
        description: |
                Number of items to be returned per page. If not supplied this defaults to 10. Maximum page size is 50
      imageSize:
        type: integer
        required: false
        description: |
                ; The requested width of the image in pixels; 


    responses:
      200:
        body:
          application/xml:
            example: |
              <response status="ok" version="1.2">
              	<searchResults>
              		<page>1</page>
              		<pageSize>2</pageSize>
              		<totalItems>303</totalItems>
              		<searchResult>
              			<type>artist</type>
              			<score>9.148376</score>
              			<artist id="226">
              				<name>Pink</name>
              				<sortName>Pink</sortName>
              				<url>http://www.7digital.com/artist/pink/?partner=1401</url>
              				<image>http://artwork-cdn.7static.com/static/img/artistimages/00/000/002/0000000226_150.jpg</image>
              				<popularity>0.8</popularity>
              			</artist>
              		</searchResult>
              		<searchResult>
              			<type>artist</type>
              			<score>5.738292</score>
              			<artist id="1471729">
              				<name>Pink Haze</name>
              				<sortName>Pink Haze</sortName>
              				<url>http://www.7digital.com/artist/pink-haze/?partner=1401</url>
              				<image>http://artwork-cdn.7static.com/static/img/artistimages/00/014/717/0001471729_150.jpg</image>
              				<popularity>0.28</popularity>
              			</artist>
              		</searchResult>
              	</searchResults>
              </response>
                      
          application/json:
            example: |  
              {
                  "status": "ok",
                  "version": "1.2",
                  "searchResults": {
                      "page": 1,
                      "pageSize": 2,
                      "totalItems": 244,
                      "searchResult": [
                          {
                              "type": "artist",
                              "score": 9.164859,
                              "artist": {
                                  "id": 226,
                                  "name": "Pink",
                                  "sortName": "Pink",
                                  "url": "http://www.7digital.com/artist/pink/?partner=1401",
                                  "image": "http://artwork-cdn.7static.com/static/img/artistimages/00/000/002/0000000226_150.jpg",
                                  "popularity": 0.79
                              }
                          },
                         ...
                      ]
                  }
              }
/artist/toptracks:

  get:
    description: |
            This method returns a list of the most popular tracks by artist.
    queryParameters:
      artistId:
        type: integer
        required: true
        description: |
                The unique identifier of the artist.
      streamable:
        type: boolean
        required: false
        description: |
                If provided search results will contain only artists that can/cannot be streamed
      country:
        type: string
        required: false
        description: |
                ; 2 letter ISO country code of the country whose artists you would like to search; 
      page:
        type: integer
        required: false
        description: |
                Page number of the result set. If not supplied, defaults to 1
      pageSize:
        type: integer
        required: false
        description: |
                Number of items to be returned per page. If not supplied this defaults to 10. Maximum page size is 50
      imageSize:
        type: integer
        required: false
        description: |
                ; The requested width of the image in pixels; 


    responses:
      200:
        body:
          application/xml:
            example: |
              <response status="ok" version="1.2">
                <tracks>
                  <page>1</page>
                  <pageSize>2</pageSize>
                  <totalItems>100</totalItems>
                  <track id="6944484">
                    <title>Somewhere Only We Know</title>
                    <version />
                    <artist id="1">
                      <name>Keane</name>
                      <appearsAs>Keane</appearsAs>
                      <url>http://www.7digital.com/artist/keane/?partner=1401</url>
                    </artist>
                    <duration>238</duration>
                    <explicitContent>false</explicitContent>
                    <isrc>GBAAN0300664</isrc>
                    <type>audio</type>
                    <release id="625642">
                      <title>Hopes and Fears</title>
                      <version>Deluxe Edition</version>
                      <type>Album</type>
                      <barcode>00600753225530</barcode>
                      <artist id="1">
                        <name>Keane</name>
                        <appearsAs>Keane</appearsAs>
                        <url>http://www.7digital.com/artist/keane/?partner=1401</url>
                      </artist>
                      <url>http://www.7digital.com/artist/keane/release/hopes-and-fears-3-1/?partner=1401</url>
                      <image>http://artwork-cdn.7static.com/static/img/sleeveart/00/006/256/0000625642_50.jpg</image>
                      <releaseDate>2009-11-09T00:00:00Z</releaseDate>
                      <formats availableDrmFree="true">
                        <format id="17">
                          <fileFormat>MP3</fileFormat>
                          <bitRate>320</bitRate>
                          <drmFree>true</drmFree>
                        </format>
                      </formats>
                    </release>
                    <url>http://www.7digital.com/artist/keane/release/hopes-and-fears-3-1/?partner=1401&amp;h=01</url>
                    <price>
                      <currency code="GBP">¬£</currency>
                      <value>0.99</value>
                      <formattedPrice>¬£0.99</formattedPrice>
                      <rrp>0.99</rrp>
                      <formattedRrp>¬£0.99</formattedRrp>
                      <onSale>false</onSale>
                    </price>
                    <streamingReleaseDate>2009-11-09T00:00:00Z</streamingReleaseDate>
                    <discNumber>1</discNumber>
                    <popularity>0.66</popularity>
                    <number>1</number>
                  </track>
                  <track id="6944493">
                    <title>Everybody's Changing</title>
                    <version />
                    <artist id="1">
                      <name>Keane</name>
                      <appearsAs>Keane</appearsAs>
                      <url>http://www.7digital.com/artist/keane/?partner=1401</url>
                    </artist>
                    <duration>217</duration>
                    <explicitContent>false</explicitContent>
                    <isrc>GBAAN0400092</isrc>
                    <type>audio</type>
                    <release id="625642">
                      <title>Hopes and Fears</title>
                      <version>Deluxe Edition</version>
                      <type>Album</type>
                      <barcode>00600753225530</barcode>
                      <artist id="1">
                        <name>Keane</name>
                        <appearsAs>Keane</appearsAs>
                        <url>http://www.7digital.com/artist/keane/?partner=1401</url>
                      </artist>
                      <url>http://www.7digital.com/artist/keane/release/hopes-and-fears-3-1/?partner=1401</url>
                      <image>http://artwork-cdn.7static.com/static/img/sleeveart/00/006/256/0000625642_50.jpg</image>
                      <releaseDate>2009-11-09T00:00:00Z</releaseDate>
                      <formats availableDrmFree="true">
                        <format id="17">
                          <fileFormat>MP3</fileFormat>
                          <bitRate>320</bitRate>
                          <drmFree>true</drmFree>
                        </format>
                      </formats>
                    </release>
                    <url>http://www.7digital.com/artist/keane/release/hopes-and-fears-3-1/?partner=1401&amp;h=04</url>
                    <price>
                      <currency code="GBP">¬£</currency>
                      <value>0.99</value>
                      <formattedPrice>¬£0.99</formattedPrice>
                      <rrp>0.99</rrp>
                      <formattedRrp>¬£0.99</formattedRrp>
                      <onSale>false</onSale>
                    </price>
                    <streamingReleaseDate>2009-11-09T00:00:00Z</streamingReleaseDate>
                    <discNumber>1</discNumber>
                    <popularity>0.59</popularity>
                    <number>4</number>
                  </track>
                </tracks>
              </response>
                      
/artist/similar:

  get:
    description: |
            This method returns a list of artists similar to given artist.
    queryParameters:
      artistId:
        type: integer
        required: true
        description: |
                The unique identifier of the artist.
      pagesize:
        type: integer
        required: false
        description: |
                Number of items to be returned per page. If not supplied this defaults to 10. Maximum page size is 50
      page:
        type: integer
        required: false
        description: |
                sets the page to be returned in paged list of the customers releases and tracks, by default this is the first page. page=1
      country:
        type: string
        required: false
        description: |
                The code of the country the end user resides in. The country will default to GB if not provided.; 


    responses:
      200:
        body:
          application/xml:
            example: |
              <?xml version="1.0" encoding="utf-8" ?>
              <response status="ok" version="1.2">
                <artists>
                  <page>1</page>
                  <pageSize>10</pageSize>
                  <totalItems>28</totalItems>
                  <artist id="14">
                    <name>The Charlatans</name>
                    <sortName>Charlatans, The</sortName>
                    <url>http://www.7digital.com/artists/the-charlatans/?partner=1401</url>
                    <image>http://artwork-cdn.7static.com/static/img/artistimages/00/000/000/0000000014_150.jpg</image>
                  </artist>
                  <artist id="20">
                    <name>Coldplay</name>
                    <sortName>Coldplay</sortName>
                    <url>http://www.7digital.com/artists/coldplay/?partner=1401</url>
                    <image>http://artwork-cdn.7static.com/static/img/artistimages/00/000/000/0000000020_150.jpg</image>
                  </artist>
                  ...
                </artists>
              </response>
          application/json:
            example: |  
              {
                "status": "ok",
                "version": "1.2",
                "artists": {
                  "page": 1,
                  "pageSize": 10,
                  "totalItems": 29,
                  "artist": [
                    {
                      "id": 14,
                      "name": "The Charlatans",
                      "sortName": "Charlatans, The",
                      "url": "http://www.7digital.com/artist/the-charlatans/",
                      "image": "http://artwork-cdn.7static.com/static/img/artistimages/00/000/000/0000000014_150.jpg"
                    },
                    {
                      "id": 20,
                      "name": "Coldplay",
                      "sortName": "Coldplay",
                      "url": "http://www.7digital.com/artist/coldplay/",
                      "image": "http://artwork-cdn.7static.com/static/img/artistimages/00/000/000/0000000020_150.jpg"
                    },
                    {
                      "id": 102,
                      "name": "Ocean Colour Scene",
                      "sortName": "Ocean Colour Scene",
                      "url": "http://www.7digital.com/artist/ocean-colour-scene/",
                      "image": "http://artwork-cdn.7static.com/static/img/artistimages/00/000/001/0000000102_150.jpg"
                    }]}}
/release/bydate:

  get:
    description: |
            Returns all releases that have a release date between two specified dates. If either the start date (fromDate) or end date (toDate) are omitted from the request, then the current day's date is used instead. Results are sorted by popularity descending.
    queryParameters:
      fromDate:
        type: date
        required: false
        description: |
                All releases in the response will have a release date equal to or after this date. If omitted, this value defaults to today's date.
      toDate:
        type: date
        required: false
        description: |
                All releases in the response will have a release date before, or equal to this date. If omitted, this value defaults to today's date.


    responses:
      200:
        body:
          application/xml:
            example: |
              <?xml version="1.0" encoding="utf-8" ?>
              <response status="ok" version="1.2" xsi:noNamespaceSchemaLocation="http://api.7digital.com/1.2/static/7digitalAPI.xsd">
              <releases>
                <page>1</page>
                <pageSize>2</pageSize>
                <totalItems>5000</totalItems>
                <release id="324755">
              	<title>A Hundred Million Suns</title>
              	<version>UK Standard Version [Explicit]</version>
              	<type>Album</type>
              	<barcode>00602517852594</barcode>
              	<year>2014</year>
              	<explicitContent>true</explicitContent>
              	<artist id="269">
              		<name>Snow Patrol</name>
              		<appearsAs>Snow Patrol</appearsAs>
              		<url>http://www.7digital.com/artist/snow-patrol/?partner=1401</url>
              	</artist>
              	<url>http://www.7digital.com/artist/snow-patrol/release/a-hundred-million-suns/?partner=1401</url>
              	<image>http://artwork-cdn.7static.com/static/img/sleeveart/00/003/247/0000324755_50.jpg</image>
              	<releaseDate>2014-05-22T00:00:00Z</releaseDate>
              	<addedDate>2008-10-08T16:31:43Z</addedDate>
              	<price>
              		<currency code="GBP">¬£</currency>
              		<value>8.99</value>
              		<formattedPrice>¬£8.99</formattedPrice>
              		<rrp>8.99</rrp>
              		<formattedRrp>¬£8.99</formattedRrp>
              		<onSale>false</onSale>
              	</price>
              	<formats availableDrmFree="true">
              		<format id="17">
              			<fileFormat>MP3</fileFormat>
              			<bitRate>320</bitRate>
              			<drmFree>true</drmFree>
              		</format>
              	</formats>
              	<label id="20348">
              		<name>Universal Music GmbH</name>
              	</label>
              	<licensor id="1">
              		<name>Universal</name>
              	</licensor>
              	<popularity>0.6</popularity>
              	<streamingReleaseDate>2014-05-22T00:00:00Z</streamingReleaseDate>
              	<duration>3484</duration>
              	<trackCount>11</trackCount>
              </release>
              <release id="135655">
              	<title>Greatest Hits</title>
              	<version/>
              	<type>Album</type>
              	<barcode>093624929161</barcode>
              	<year>2004</year>
              	<explicitContent>false</explicitContent>
              	<artist id="915">
              		<name>Neil Young</name>
              		<appearsAs>Neil Young</appearsAs>
              		<url>http://www.7digital.com/artist/neil-young/?partner=1401</url>
              	</artist>
              	<url>http://www.7digital.com/artist/neil-young/release/greatest-hits-2/?partner=1401</url>
              	<image>http://artwork-cdn.7static.com/static/img/sleeveart/00/001/356/0000135655_50.jpg</image>
              	<releaseDate>2014-05-21T00:00:00Z</releaseDate>
              	<addedDate>2008-03-03T14:15:09Z</addedDate>
              	<price>
              		<currency code="GBP">¬£</currency>
              		<value>5.49</value>
              		<formattedPrice>¬£5.49</formattedPrice>
              		<rrp>5.49</rrp>
              		<formattedRrp>¬£5.49</formattedRrp>
              		<onSale>false</onSale>
              	</price>
              	<formats availableDrmFree="true">
              		<format id="48">
              			<fileFormat>MP3</fileFormat>
              			<bitRate>256</bitRate>
              			<drmFree>true</drmFree>
              		</format>
              	</formats>
              	<label id="253">
              		<name>Reprise</name>
              	</label>
              	<licensor id="18">
              		<name>Warner</name>
              	</licensor>
              	<popularity>0.56</popularity>
              	<streamingReleaseDate>2010-07-20T00:00:00Z</streamingReleaseDate>
              	<duration>4600</duration>
              	<trackCount>16</trackCount>
              </release>
              </releases>
              </response>
              
/release/chart:

  get:
    description: |
            This method returns a chart of the most purchased releases for given period. Only albums are included in this chart. To retrieve the most recent charts as published on 7digital.com period and toDate parameter should be omitted (the default values will be used).
    queryParameters:
      period:
        enum: [test]
        required: false
        description: |
                The time period for which the chart is generated. The default value is a week.
      toDate:
        type: date
        required: false
        description: |
                The last day the chart should include data for. If not provided, by default the most recent chart for requested period will be returned.
      streamable:
        type: boolean
        required: false
        description: |
                If provided search results will contain only releases that can/cannot be streamed
      country:
        type: string
        required: false
        description: |
                ; 2 letter ISO country code of the country whose releases you would like to view; 
      page:
        type: integer
        required: false
        description: |
                Page number of the result set. If not supplied, defaults to 1
      pageSize:
        type: integer
        required: false
        description: |
                Number of items to be returned per page. If not supplied this defaults to 10. Maximum page size is 50
      imageSize:
        type: integer
        required: false
        description: |
                ; The requested width of the image in pixels; 


    responses:
      200:
        body:
          application/xml:
            example: |
              <response status="ok" version="1.2" xsi:noNamespaceSchemaLocation="http://api.7digital.com/1.2/static/7digitalAPI.xsd">
                <chart>
                  <page>1</page>
                  <pageSize>2</pageSize>
                  <totalItems>92</totalItems>
                  <type>album</type>
                  <fromDate>2012-08-01T00:00:00+01:00</fromDate>
                  <toDate>2012-08-01T00:00:00+01:00</toDate>
                  <chartItem>
                    <position>1</position>
                    <change>New</change>
                    <release id="1815792">
                      <title>Now That's What I Call Music! 82</title>
                      <version/>
                      <type>Album</type>
                      <barcode>5099970571950</barcode>
                      <year>2012</year>
                      <explicitContent>false</explicitContent>
                      <artist id="209">
                        <name>Various Artists</name>
                        <appearsAs>Various Artists</appearsAs>
                        <url>http://www.7digital.com/artist/various-artists/?partner=1401</url>
                      </artist>
                      <url>http://www.7digital.com/artist/various-artists/release/now-thats-what-i-call-music-82/?partner=1401</url>
                      <image>http://artwork-cdn.7static.com/static/img/sleeveart/00/018/157/0001815792_50.jpg</image>
                      <releaseDate>2012-07-23T00:00:00+01:00</releaseDate>
                      <price>
                        <currency code="GBP">¬£</currency>
                        <value>10.99</value>
                        <formattedPrice>¬£10.99</formattedPrice>
                        <rrp>10.99</rrp>
                        <formattedRrp>¬£10.99</formattedRrp>
                        <onSale>false</onSale>
                      </price>
                      <formats availableDrmFree="true">
                        <format id="17">
                          <fileFormat>MP3</fileFormat>
                          <bitRate>320</bitRate>
                          <drmFree>true</drmFree>
                        </format>
                      </formats>
                      <streamingReleaseDate>3001-01-01T00:00:00+00:00</streamingReleaseDate>
                      <duration>9442</duration>
                      <trackCount>44</trackCount>
                    </release>
                  </chartItem>
                  ...
                </chart>
              </response>
          application/json:
            example: |  
              {
              "status": "ok",
              "version": "1.2",
              "chart": {
                  "page": 1,
                  "pageSize": 2,
                  "totalItems": 92,
                  "type": "album",
                  "fromDate": "2012-08-01T00:00:00+01:00",
                  "toDate": "2012-08-01T00:00:00+01:00",
                  "chartItem": [
                      {
                          "position": 1,
                          "change": "New",
                          "release": {
                              "id": 1815792,
                              "title": "Now That's What I Call Music! 82",
                              "version": "",
                              "type": "Album",
                              "barcode": "5099970571950",
                              "year": 2012,
                              "explicitContent": false,
                              "artist": {
                                  "id": 209,
                                  "name": "Various Artists",
                                  "appearsAs": "Various Artists",
                                  "url": "http://www.7digital.com/artist/various-artists/?partner=1401"
                              },
                              "url": "http://www.7digital.com/artist/various-artists/release/now-thats-what-i-call-music-82/?partner=1401",
                              "image": "http://artwork-cdn.7static.com/static/img/sleeveart/00/018/157/0001815792_50.jpg",
                              "releaseDate": "2012-07-23T00:00:00+01:00",
                              "price": {
                                  "currency": {
                                      "code": "GBP",
                                      "symbol": "¬£"
                                  },
                                  "value": "10.99",
                                  "formattedPrice": "¬£10.99",
                                  "rrp": "10.99",
                                  "formattedRrp": "¬£10.99",
                                  "onSale": false
                              },
                              "formats": [
                                  {
                                      "id": 17,
                                      "fileFormat": "MP3",
                                      "bitRate": 320,
                                      "drmFree": true
                                  }
                              ],
                              "streamingReleaseDate": "3001-01-01T00:00:00+00:00",
                              "duration": 9442,
                              "trackCount": 44
                          }
                      },
                      ...
                  ]
              }
              }
/release/details:

  get:
    description: |
            This method returns all available details for a given release.
    queryParameters:
      releaseId:
        type: integer
        required: true
        description: |
                The unique identifier of the release.
      country:
        type: string
        required: false
        description: |
                2 letter ISO country code of the country whose releases you would like to view
      imageSize:
        type: integer
        required: false
        description: |
                The requested width of the image in pixels


    responses:
      200:
        body:
          application/xml:
            example: |
              <response status="ok" version="1.2" >
                <release id="1046">
                  <title>No Surprises</title>
                  <version/>
                  <type>Single</type>
                  <barcode>0724388514453</barcode>
                  <year>2003</year>
                  <explicitContent>false</explicitContent>
                  <artist id="304">
                    <name>Radiohead</name>
                    <appearsAs>Radiohead</appearsAs>
                    <url>http://www.7digital.com/artist/radiohead/?partner=1401</url>
                  </artist>
                  <url>http://www.7digital.com/artist/radiohead/release/no-surprises/?partner=1401</url>
                  <image>http://artwork-cdn.7static.com/static/img/sleeveart/00/000/010/0000001046_50.jpg</image>
                  <releaseDate>2003-03-01T00:00:00Z</releaseDate>
                  <addedDate>2007-08-17T17:54:23Z</addedDate>
                  <price>
                    <currency code="GBP">¬£</currency>
                    <value>2.97</value>
                    <formattedPrice>¬£2.97</formattedPrice>
                    <rrp>2.97</rrp>
                    <formattedRrp>¬£2.97</formattedRrp>
                    <onSale>false</onSale>
                  </price>
                  <formats availableDrmFree="true">
                    <format id="17">
                      <fileFormat>MP3</fileFormat>
                      <bitRate>320</bitRate>
                      <drmFree>true</drmFree>
                    </format>
                  </formats>
                  <label id="227575">
                    <name>Parlophone UK</name>
                  </label>
                  <licensor id="18">
                    <name>Warner</name>
                  </licensor>
                  <popularity>0</popularity>
                  <streamingReleaseDate>2003-03-01T00:00:00Z</streamingReleaseDate>
                  <duration>642</duration>
                  <trackCount>3</trackCount>
                </release>
              </response>
          application/json:
            example: |  
              {
                "status": "ok",
                "version": "1.2",
                "release": {
                    "id": 1046,
                    "title": "No Surprises",
                    "version": "",
                    "type": "Single",
                    "barcode": "0724388514453",
                    "year": 2003,
                    "explicitContent": false,
                    "artist": {
                        "id": 304,
                        "name": "Radiohead",
                        "appearsAs": "Radiohead",
                        "url": "http://www.7digital.com/artist/radiohead/?partner=1401"
                    },
                    "url": "http://www.7digital.com/artist/radiohead/release/no-surprises/?partner=1401",
                    "image": "http://artwork-cdn.7static.com/static/img/sleeveart/00/000/010/0000001046_50.jpg",
                    "releaseDate": "2003-03-01T00:00:00Z",
                    "addedDate": "2007-08-17T17:54:23Z",
                    "price": {
                        "currency": {
                            "code": "GBP",
                            "symbol": "¬£"
                        },
                        "value": "2.97",
                        "formattedPrice": "¬£2.97",
                        "rrp": "2.97",
                        "formattedRrp": "¬£2.97",
                        "onSale": false
                    },
                    "formats": [
                        {
                            "id": 17,
                            "fileFormat": "MP3",
                            "bitRate": 320,
                            "drmFree": true
                        }
                    ],
                    "label": {
                        "id": 227575,
                        "name": "Parlophone UK"
                    },
                    "licensor": {
                        "id": 18,
                        "name": "Warner"
                    },
                    "popularity": 0,
                    "streamingReleaseDate": "2003-03-01T00:00:00Z",
                    "duration": 642,
                    "trackCount": 3
                }
              }
/release/recommend:

  get:
    description: |
            This method returns list of recommended releases for given release or artist.
    queryParameters:
      releaseId / artistId:
        type: integer
        required: true
        description: |
                The unique identifier of the recommended release or artist. Only ONE identifier can be specified in a request.
      streamable:
        type: boolean
        required: false
        description: |
                If provided, results will contain only releases that can or cannot be streamed


    responses:
      200:
        body:
          application/xml:
            example: |
              <response status="ok" version="1.2" xsi:noNamespaceSchemaLocation="http://api.7digital.com/1.2/static/7digitalAPI.xsd">
                <recommendations>
                  <page>1</page>
                  <pageSize>2</pageSize>
                  <totalItems>10</totalItems>
                  <recommendedItem>
                    <release id="858809">
                      <title>Kissing Strangers</title>
                      <version/>
                      <type>Album</type>
                      <barcode>4250382403241</barcode>
                      <year>2010</year>
                      <explicitContent>false</explicitContent>
                      <artist id="12562">
                        <name>Phonique</name>
                        <appearsAs>Phonique</appearsAs>
                        <url>http://www.7digital.com/artist/phonique/?partner=1401</url>
                      </artist>
                      <url>http://www.7digital.com/artist/phonique/release/kissing-strangers/?partner=1401</url>
                      <image>http://artwork-cdn.7static.com/static/img/sleeveart/00/008/588/0000858809_50.jpg</image>
                      <releaseDate>2010-06-07T00:00:00Z</releaseDate>
                      <addedDate>2010-05-28T17:33:10Z</addedDate>
                      <price>
                        <currency code="GBP"/>
                        <value>7.99</value>
                        <formattedPrice>¬£7.99</formattedPrice>
                        <rrp>7.99</rrp>
                        <formattedRrp>¬£7.99</formattedRrp>
                        <onSale>false</onSale>
                      </price>
                      <formats availableDrmFree="false"/>
                      <label id="9201">
                        <name>Dessous Recordings</name>
                      </label>
                      <licensor id="68">
                        <name>Kontor</name>
                      </licensor>
                      <streamingReleaseDate xsi:nil="true"/>
                      <duration>4751</duration>
                      <trackCount>15</trackCount>
                    </release>
                  </recommendedItem>
                  <recommendedItem>
                    <release id="1193594">
                      <title>Endless Love feat. Louie Austen</title>
                      <version/>
                      <type>Single</type>
                      <barcode>4250382410713</barcode>
                      <year>2011</year>
                      <explicitContent>false</explicitContent>
                      <artist id="12562">
                        <name>Phonique</name>
                        <appearsAs>Phonique</appearsAs>
                        <url>http://www.7digital.com/artist/phonique/?partner=1401</url>
                      </artist>
                      <url>http://www.7digital.com/artist/phonique/release/endless-love-feat-louie-austen/?partner=1401</url>
                      <image>http://artwork-cdn.7static.com/static/img/sleeveart/00/011/935/0001193594_50.jpg</image>
                      <releaseDate>2011-03-25T00:00:00Z</releaseDate>
                      <addedDate>2011-03-24T16:51:04Z</addedDate>
                      <price>
                        <currency code="GBP"/>
                        <value>1.79</value>
                        <formattedPrice>¬£1.79</formattedPrice>
                        <rrp>1.79</rrp>
                        <formattedRrp>¬£1.79</formattedRrp>
                        <onSale>false</onSale>
                      </price>
                      <formats availableDrmFree="true">
                        <format id="17">
                          <fileFormat>MP3</fileFormat>
                          <bitRate>320</bitRate>
                          <drmFree>true</drmFree>
                        </format>
                        <format id="33">
                          <fileFormat>M4A</fileFormat>
                          <bitRate>320</bitRate>
                          <drmFree>true</drmFree>
                        </format>
                      </formats>
                      <label id="9201">
                        <name>Dessous Recordings</name>
                      </label>
                      <licensor id="319">
                        <name>Paradise Entertainment &amp; Distribution</name>
                      </licensor>
                      <streamingReleaseDate>2011-03-25T00:00:00Z</streamingReleaseDate>
                      <duration>1450</duration>
                      <trackCount>4</trackCount>
                    </release>
                  </recommendedItem>
                </recommendations>
              </response>
                  
/release/search:

  get:
    description: |
            This method searches the 7digital catalogue for releases matching the search query. Results can be filtered by release type.
    queryParameters:
      q:
        type: string
        required: true
        description: |
                The search query string.
      type:
        enum: [test]
        required: false
        description: |
                If specified results are filtered by given release type (multiple types separated by commas can be passed).
      streamable:
        type: boolean
        required: false
        description: |
                If provided search results will only contain releases that can/cannot be streamed
      country:
        type: string
        required: false
        description: |
                ; 2 letter ISO country code of the country whose releases you would like to search; 
      page:
        type: integer
        required: false
        description: |
                Page number of the result set. If not supplied, defaults to 1
      pageSize:
        type: integer
        required: false
        description: |
                Number of items to be returned per page. If not supplied this defaults to 10. Maximum page size is 50
      imageSize:
        type: integer
        required: false
        description: |
                ; The requested width of the image in pixels; 


    responses:
      200:
        body:
          application/xml:
            example: |
              <response status="ok" version="1.2" xsi:noNamespaceSchemaLocation="http://api.7digital.com/1.2/static/7digitalAPI.xsd">
                <searchResults>
                  <page>1</page>
                  <pageSize>2</pageSize>
                  <totalItems>19732</totalItems>
                  <searchResult>
                    <type>release</type>
                    <score>7.300968</score>
                    <release id="1046">
                      <title>No Surprises</title>
                      <version/>
                      <type>Single</type>
                      <barcode>0724388514453</barcode>
                      <year>2003</year>
                      <explicitContent>false</explicitContent>
                      <artist id="304">
                        <name>Radiohead</name>
                        <appearsAs>Radiohead</appearsAs>
                        <url>http://www.7digital.com/artist/radiohead/?partner=1401</url>
                      </artist>
                      <url>http://www.7digital.com/artist/radiohead/release/no-surprises/?partner=1401</url>
                      <image>http://artwork-cdn.7static.com/static/img/sleeveart/00/000/010/0000001046_50.jpg</image>
                      <releaseDate>2003-03-01T00:00:00+00:00</releaseDate>
                      <addedDate>2004-10-02T18:12:57+01:00</addedDate>
                      <price>
                        <currency code="GBP">¬£</currency>
                        <value>1.99</value>
                        <formattedPrice>¬£1.99</formattedPrice>
                        <rrp>1.99</rrp>
                        <formattedRrp>¬£1.99</formattedRrp>
                        <onSale>false</onSale>
                      </price>
                      <formats availableDrmFree="true">
                        <format id="17">
                          <fileFormat>MP3</fileFormat>
                          <bitRate>320</bitRate>
                          <drmFree>true</drmFree>
                        </format>
                      </formats>
                      <label id="77">
                        <name>EMI UK</name>
                      </label>
                      <licensor id="13">
                        <name>EMI</name>
                      </licensor>
                      <popularity>0.46</popularity>
                      <streamingReleaseDate>2003-03-01T00:00:00+00:00</streamingReleaseDate>
                      <duration>644</duration>
                      <trackCount>3</trackCount>
                    </release>
                  </searchResult>
                  ...
                </searchResults>
              </response>
          application/json:
            example: |  
              {"status": "ok",
              "version": "1.2",
              "searchResults": {
                  "page": 1,
                  "pageSize": 2,
                  "totalItems": 19732,
                  "searchResult": [
                      {
                          "type": "release",
                          "score": 7.300968,
                          "release": {
                              "id": 1046,
                              "title": "No Surprises",
                              "version": "",
                              "type": "Single",
                              "barcode": "0724388514453",
                              "year": 2003,
                              "explicitContent": false,
                              "artist": {
                                  "id": "304",
                                  "name": "Radiohead",
                                  "appearsAs": "Radiohead",
                                  "url": "http://www.7digital.com/artist/radiohead/?partner=1401"
                              },
                              "url": "http://www.7digital.com/artist/radiohead/release/no-surprises/?partner=1401",
                              "image": "http://artwork-cdn.7static.com/static/img/sleeveart/00/000/010/0000001046_50.jpg",
                              "releaseDate": "2003-03-01T00:00:00+00:00",
                              "addedDate": "2004-10-02T18:12:57+01:00",
                              "price": {
                                  "currency": {
                                      "code": "GBP",
                                      "symbol": "¬£"
                                  },
                                  "value": "1.99",
                                  "formattedPrice": "¬£1.99",
                                  "rrp": "1.99",
                                  "formattedRrp": "¬£1.99",
                                  "onSale": false
                              },
                              "formats": {
                                  "availableDrmFree": true,
                                  "format": [
                                      {
                                          "id": 17,
                                          "fileFormat": "MP3",
                                          "bitRate": 320,
                                          "drmFree": true,
                                          "priority": 11
                                      }
                                  ]
                              },
                              "label": {
                                  "id": "77",
                                  "name": "EMI UK"
                              },
                              "licensor": {
                                  "id": "13",
                                  "name": "EMI"
                              },
                              "popularity": 0.46,
                              "streamingReleaseDate": "2003-03-01T00:00:00+00:00",
                              "duration": 644,
                              "trackCount": 3
                          }
                      },
                      ...           
                  ]
              }}
/release/tracks:

  get:
    description: |
            This method will return a list of all tracks constituting the release.
    queryParameters:
      releaseId:
        type: integer
        required: true
        description: |
                The unique ID of the release.
      country:
        type: string
        required: false
        description: |
                ; 2 letter ISO country code of the country whose tracks you would like to search; 
      imageSize:
        type: integer
        required: false
        description: |
                ; The requested width of the image in pixels; 
      streamable:
        type: boolean
        required: false
        description: |
                If provided, results will contain only tracks that can or cannot be streamed


    responses:
      200:
        body:
          application/xml:
            example: |
              <response status="ok" version="1.2">
                <tracks>
                  <page>1</page>
                  <pageSize>3</pageSize>
                  <totalItems>3</totalItems>
                  <track id="9525">
                    <title>No Surprises</title>
                    <version />
                    <artist id="304">
                        <name>Radiohead</name>
                        <appearsAs>Radiohead</appearsAs>
                        <url>http://www.7digital.com/artist/radiohead/?partner=1401</url>
                    </artist>
                    <duration>229</duration>
                    <explicitContent>false</explicitContent>
                    <isrc>GBAYE9700386</isrc>
                    <type>audio</type>
                    <release id="1046">
                      <title>No Surprises</title>
                      <version />
                      <type>Single</type>
                      <barcode>0724388514453</barcode>
                      <artist id="304">
                        <name>Radiohead</name>
                        <appearsAs>Radiohead</appearsAs>
                        <url>http://www.7digital.com/artist/radiohead/?partner=1401</url>
                      </artist>
                      <url>http://www.7digital.com/artist/radiohead/release/no-surprises/?partner=1401</url>
                      <image>http://artwork-cdn.7static.com/static/img/sleeveart/00/000/010/0000001046_50.jpg</image>
                    </release>
                    <url>http://www.7digital.com/artist/radiohead/release/no-surprises/?partner=1401&amp;h=01</url>
                    <price>
                      <currency code="GBP">¬£</currency>
                      <value>0.99</value>
                      <formattedPrice>¬£0.99</formattedPrice>
                      <rrp>0.99</rrp>
                      <formattedRrp>¬£0.99</formattedRrp>
                      <onSale>false</onSale>
                    </price>
                    <streamingReleaseDate>2003-03-01T00:00:00</streamingReleaseDate>
                    <discNumber>1</discNumber>
                    <number>1</number>
                    <previewDate>1997-07-03T00:00:00Z</previewDate>
                  </track>
                  <track id="9526">
                    <title>Palo Alto</title>
                    <version />
                    <artist id="304">
                      <name>Radiohead</name>
                      <appearsAs>Radiohead</appearsAs>
                      <url>http://www.7digital.com/artist/radiohead/?partner=1401</url>
                    </artist>
                    <duration>224</duration>
                    <explicitContent>false</explicitContent>
                    <isrc>GBAYE9800042</isrc>
                    <type>audio</type>
                    <release id="1046">
                      <title>No Surprises</title>
                      <version />
                      <type>Single</type>
                      <barcode>0724388514453</barcode>
                      <artist id="304">
                        <name>Radiohead</name>
                        <appearsAs>Radiohead</appearsAs>
                        <url>http://www.7digital.com/artist/radiohead/?partner=1401</url>
                      </artist>
                      <url>http://www.7digital.com/artist/radiohead/release/no-surprises/?partner=1401</url>
                      <image>http://artwork-cdn.7static.com/static/img/sleeveart/00/000/010/0000001046_50.jpg</image>
                    </release>
                    <url>http://www.7digital.com/artist/radiohead/release/no-surprises/?partner=1401&amp;h=02</url>
                    <price>
                      <currency code="GBP">¬£</currency>
                      <value>0.99</value>
                      <formattedPrice>¬£0.99</formattedPrice>
                      <rrp>0.99</rrp>
                      <formattedRrp>¬£0.99</formattedRrp>
                      <onSale>false</onSale>
                    </price>
                    <streamingReleaseDate>2003-03-01T00:00:00</streamingReleaseDate>
                    <discNumber>1</discNumber>
                    <number>2</number>
                    <previewDate>1997-07-03T00:00:00Z</previewDate>
                  </track>
                  <track id="9527">
                    <title>How I Made My Millions</title>
                    <version />
                    <artist id="304">
                      <name>Radiohead</name>
                      <appearsAs>Radiohead</appearsAs>
                      <url>http://www.7digital.com/artist/radiohead/?partner=1401</url>
                    </artist>
                    <duration>189</duration>
                    <explicitContent>false</explicitContent>
                    <isrc>GBAYE9800043</isrc>
                    <type>audio</type>
                    <release id="1046">
                      <title>No Surprises</title>
                      <version />
                      <type>Single</type>
                      <barcode>0724388514453</barcode>
                      <artist id="304">
                        <name>Radiohead</name>
                        <appearsAs>Radiohead</appearsAs>
                        <url>http://www.7digital.com/artist/radiohead/?partner=1401</url>
                      </artist>
                      <url>http://www.7digital.com/artist/radiohead/release/no-surprises/?partner=1401</url>
                      <image>http://artwork-cdn.7static.com/static/img/sleeveart/00/000/010/0000001046_50.jpg</image>
                    </release>
                    <url>http://www.7digital.com/artist/radiohead/release/no-surprises/?partner=1401&amp;h=03</url>
                    <price>
                      <currency code="GBP">¬£</currency>
                      <value>0.99</value>
                      <formattedPrice>¬£0.99</formattedPrice>
                      <rrp>0.99</rrp>
                      <formattedRrp>¬£0.99</formattedRrp>
                      <onSale>false</onSale>
                    </price>
                    <streamingReleaseDate>2003-03-01T00:00:00</streamingReleaseDate>
                    <discNumber>1</discNumber>
                    <number>3</number>
                    <previewDate>1997-07-03T00:00:00Z</previewDate>
                  </track>
                </tracks>
              </response>
                      
/track/chart:

  get:
    description: |
            This method returns a chart of the most purchased tracks for given period. To retrieve the most recent charts as published on 7digital.com period and toDate parameter should be omitted (the default values will be used).
    queryParameters:
      period:
        enum: [test]
        required: false
        description: |
                The time period for which the chart is generated. Default value is a week.
      toDate:
        type: date
        required: false
        description: |
                The last day the chart should include data for. If not provided, by default the most recent chart for requested period will be returned.
      streamable:
        type: boolean
        required: false
        description: |
                If provided search results will contain only tracks that can/cannot be streamed
      country:
        type: string
        required: false
        description: |
                2 letter ISO country code of the country whose tracks you would like to search
      page:
        type: integer
        required: false
        description: |
                Page number of the result set. If not supplied, defaults to 1
      pageSize:
        type: integer
        required: false
        description: |
                Number of items to be returned per page. If not supplied this defaults to 10. Maximum page size is 50
      imageSize:
        type: integer
        required: false
        description: |
                The requested width of the image in pixels


    responses:
      200:
        body:
          application/xml:
            example: |
              <response status="ok" version="1.2">
                <chart>
                <page>1</page>
                <pageSize>2</pageSize>
                <totalItems>79</totalItems>
                <type>track</type>
                <fromDate>2012-02-24T00:00:00+00:00</fromDate>
                <toDate>2012-03-01T00:00:00+00:00</toDate>
                <chartItem>
                  <position>1</position>
                  <change>New</change>
                  <track id="17111839">
                  <title>Hot Right Now</title>
                      <version>Radio Edit</version>
                      <artist id="130592">
                        <name>DJ Fresh</name>
                        <appearsAs>DJ Fresh Feat. Rita Ora</appearsAs>
                        <url>http://www.7digital.com/artist/dj-fresh/?partner=1401</url>
                      </artist>
                      <duration>182</duration>
                      <explicitContent>false</explicitContent>
                      <isrc>GBCEN1102199</isrc>
                      <type>audio</type>
                      <release id="1552413">
                        <title>Hot Right Now</title>
                        <version/>
                        <type>Single</type>
                        <barcode>5051823057240</barcode>
                        <artist id="130592">
                          <name>DJ Fresh</name>
                          <appearsAs>DJ Fresh Feat. Rita Ora</appearsAs>
                          <url>http://www.7digital.com/artist/dj-fresh/?partner=1401</url>
                        </artist>
                        <url>http://www.7digital.com/artist/dj-fresh/release/hot-right-now/?partner=1401</url>
                        <image>http://artwork-cdn.7static.com/static/img/sleeveart/00/015/524/0001552413_50.jpg</image>
                        <releaseDate>2012-02-12T00:00:00Z</releaseDate>
                        <formats availableDrmFree="true">
                          <format id="17">
                            <fileFormat>MP3</fileFormat>
                            <bitRate>320</bitRate>
                            <drmFree>true</drmFree>
                          </format>
                          <format id="33">
                            <fileFormat>M4A</fileFormat>
                            <bitRate>320</bitRate>
                            <drmFree>true</drmFree>
                          </format>
                        </formats>
                      </release>
                      <url>http://www.7digital.com/artist/dj-fresh/release/hot-right-now/?partner=1401&h=01</url>
                      <price>
                        <currency code="GBP">¬£</currency>
                        <value>0.99</value>
                        <formattedPrice>¬£0.99</formattedPrice>
                        <rrp>0.99</rrp>
                        <formattedRrp>¬£0.99</formattedRrp>
                        <onSale>false</onSale>
                      </price>
                      <discNumber>1</discNumber>
                      <number>1</number>
                    </track>
                  </chartItem>
                  <chartItem>
                    <position>2</position>
                    <change>New</change>
                    <track id="16784782">
                      <title>Somebody That I Used To Know</title>
                      <version/>
                      <artist id="183323">
                        <name>Gotye</name>
                        <appearsAs>Gotye / Kimbra</appearsAs>
                        <url>http://www.7digital.com/artist/gotye/?partner=1401</url>
                      </artist>
                      <duration>245</duration>
                      <explicitContent>false</explicitContent>
                      <isrc>AUZS21100040</isrc>
                      <type>audio</type>
                      <release id="1522904">
                        <title>Somebody That I Used To Know</title>
                        <version/>
                        <type>Single</type>
                        <barcode>00602527927008</barcode>
                        <artist id="183323">
                          <name>Gotye</name>
                          <appearsAs>Gotye / Kimbra</appearsAs>
                          <url>http://www.7digital.com/artist/gotye/?partner=1401</url>
                        </artist>
                        <url>http://www.7digital.com/artist/gotye/release/somebody-that-i-used-to-know-2/?partner=1401</url>
                        <image>http://artwork-cdn.7static.com/static/img/sleeveart/00/015/229/0001522904_50.jpg</image>
                        <releaseDate>2012-01-01T00:00:00Z</releaseDate>
                        <formats availableDrmFree="true">
                          <format id="17">
                            <fileFormat>MP3</fileFormat>
                            <bitRate>320</bitRate>
                            <drmFree>true</drmFree>
                          </format>
                        </formats>
                      </release>
                      <url>http://www.7digital.com/artist/gotye/release/somebody-that-i-used-to-know-2/?partner=1401&h=01</url>
                      <price>
                        <currency code="GBP">¬£</currency>
                        <value>0.99</value>
                        <formattedPrice>¬£0.99</formattedPrice>
                        <rrp>0.99</rrp>
                        <formattedRrp>¬£0.99</formattedRrp>
                        <onSale>false</onSale>
                      </price>
                      <streamingReleaseDate>2012-01-01T00:00:00Z</streamingReleaseDate>
                      <discNumber>1</discNumber>
                      <number>1</number>
                    </track>
                  </chartItem>
                </chart>
              </response>
          application/json:
            example: |  
              {
                  "status": "ok",
                  "version": "1.2",
                  "chart": {
                      "page": 1,
                      "pageSize": 2,
                      "totalItems": 88,
                      "type": "track",
                      "fromDate": "2012-02-24T00:00:00+00:00",
                      "toDate": "2012-03-01T00:00:00+00:00",
                      "chartItem": [
                          {
                              "position": 1,
                              "change": "New",
                              "track": {
                                  "id": 17111839,
                                  "title": "Hot Right Now",
                                  "version": "Radio Edit",
                                  "artist": {
                                      "id": 130592,
                                      "name": "DJ Fresh",
                                      "appearsAs": "DJ Fresh Feat. Rita Ora",
                                      "url": "http://www.7digital.com/artist/dj-fresh/?partner=1401"
                                  },
                                  "duration": 182,
                                  "explicitContent": false,
                                  "release": {
                                      "id": 1552413,
                                      "title": "Hot Right Now",
                                      "version": "",
                                      "type": "Single",
                                      "artist": {
                                          "id": 130592,
                                          "name": "DJ Fresh",
                                          "appearsAs": "DJ Fresh Feat. Rita Ora",
                                          "url": "http://www.7digital.com/artist/dj-fresh/?partner=1401"
                                      },
                                      "url": "http://www.7digital.com/artist/dj-fresh/release/hot-right-now/?partner=1401",
                                      "image": "http://artwork-cdn.7static.com/static/img/sleeveart/00/015/524/0001552413_50.jpg",
                                      "releaseDate": "2012-02-12T00:00:00+00:00",
                                      "formatList": {
                                          "format": [
                                              {
                                                  "id": 17,
                                                  "fileFormat": "MP3",
                                                  "bitRate": 320,
                                                  "drmFree": true
                                              },
                                              {
                                                  "id": 33,
                                                  "fileFormat": "MP4",
                                                  "bitRate": 320,
                                                  "drmFree": true
                                              }
                                          ]
                                      }
                                  },
                                  "url": "http://www.7digital.com/artist/dj-fresh/release/hot-right-now/?partner=1401&h=01",
                                  "price": {
                                      "currency": {
                                          "code": "GBP",
                                          "symbol": "¬£"
                                      },
                                      "value": "0.99",
                                      "formattedPrice": "¬£0.99",
                                      "onSale": false
                                  },
                                  "streamingReleaseDate": "3013-02-20T12:03:33+00:00",
                                  "discNumber": 0
                              }
                          },
                          ...
                      ]
                  }
              }
/track/details:

  get:
    description: |
            This method returns various track details such as title, duration and price.
    queryParameters:
      trackId:
        type: integer
        required: true
        description: |
                The unique identifier of the track.
      country:
        type: string
        required: false
        description: |
                2 letter ISO country code of the country whose releases you would like to view
      imageSize:
        type: integer
        required: false
        description: |
                The requested width of the image in pixels


    responses:
      200:
        body:
          application/xml:
            example: |
              
              <response status="ok" version="1.2">
                <track id="12345">
                  <title>I Love You</title>
                  <version/>
                  <artist id="437">
                    <name>The Dandy Warhols</name>
                    <appearsAs>The Dandy Warhols</appearsAs>
                    <url>http://www.7digital.com/artist/the-dandy-warhols/?partner=1401</url>
                  </artist>
                  <duration>252</duration>
                  <explicitContent>false</explicitContent>
                  <isrc>USCA29600191</isrc>
                  <type>audio</type>
                  <release id="1302">
                    <title>...The Dandy Warhols Come Down</title>
                    <version/>
                    <type>Album</type>
                    <barcode>00724349501058</barcode>
                    <artist id="437">
                      <name>The Dandy Warhols</name>
                      <appearsAs>The Dandy Warhols</appearsAs>
                      <url>http://www.7digital.com/artist/the-dandy-warhols/?partner=1401</url>
                    </artist>
                    <url>http://www.7digital.com/artist/the-dandy-warhols/release/the-dandy-warhols-come-down/?partner=1401</url>
                    <image>http://artwork-cdn.7static.com/static/img/sleeveart/00/000/013/0000001302_50.jpg</image>
                    <releaseDate>1997-07-03T00:00:00Z</releaseDate>
                  </release>
                  <url>http://www.7digital.com/artist/the-dandy-warhols/release/the-dandy-warhols-come-down/?partner=1401&h=05</url>
                  <price>
                    <currency code="GBP">¬£</currency>
                    <value>0.99</value>
                    <formattedPrice>¬£0.99</formattedPrice>
                    <rrp>0.99</rrp>
                    <formattedRrp>¬£0.99</formattedRrp>
                    <onSale>false</onSale>
                  </price>
                  <streamingReleaseDate>1997-07-03T00:00:00Z</streamingReleaseDate>
                  <discNumber>1</discNumber>    
                  <formats availableDrmFree="true">
                    <format id="17">
                      <fileFormat>MP3</fileFormat>
                      <bitRate>320</bitRate>
                      <drmFree>true</drmFree>
                    </format>
                  </formats>
                  <number>5</number>
                  <previewDate>1997-07-03T00:00:00Z</previewDate>
                </track>
              </response>
/track/search:

  get:
    description: |
            ; This method will search for a track that matches the supplied search query. The following fields will be searched on: track title,; artist name, release title and track ISRC.; 
    queryParameters:
      q:
        type: string
        required: true
        description: |
                The search query string.
      streamable:
        type: boolean
        required: false
        description: |
                If provided search results will contain only tracks that can/cannot be streamed
      country:
        type: string
        required: false
        description: |
                2 letter ISO country code of the country whose tracks you would like to search
      page:
        type: integer
        required: false
        description: |
                Page number of the result set. If not supplied, defaults to 1
      pageSize:
        type: integer
        required: false
        description: |
                Number of items to be returned per page. If not supplied this defaults to 10. Maximum page size is 50
      imageSize:
        type: integer
        required: false
        description: |
                The requested width of the image in pixels


    responses:
      200:
        body:
          application/xml:
            example: |
              <response status="ok" version="1.2">
                <searchResults>
                  <page>1</page>
                  <pageSize>2</pageSize>
                  <totalItems>200</totalItems>
                  <searchResult>
                    <type>track</type>
                    <score>6.6522746</score>
                    <track id="10353559">
                      <title>Happy Birthday To You</title>
                      <version/>
                      <artist id="571009">
                        <name>Happy Birthday</name>
                        <appearsAs>Happy Birthday</appearsAs>
                        <url>http://www.7digital.com/artist/happy-birthday/?partner=1401</url>
                      </artist>
                      <duration>35</duration>
                      <explicitContent>false</explicitContent>
                      <isrc>DEHB20700052</isrc>
                      <type>audio</type>
                      <release id="940630">
                        <title>Happy Birthday!</title>
                        <version/>
                        <type>Single</type>
                        <artist id="571009">
                          <name>Happy Birthday</name>
                          <appearsAs>Happy Birthday</appearsAs>
                          <url>http://www.7digital.com/artist/happy-birthday/?partner=1401</url>
                        </artist>
                        <url>http://www.7digital.com/artist/happy-birthday/release/happy-birthday-2/?partner=1401</url>
                        <image>http://artwork-cdn.7static.com/static/img/sleeveart/00/009/406/0000940630_50.jpg</image>
                        <releaseDate>2010-09-03T00:00:00Z</releaseDate>
                        <formats availableDrmFree="true">
                          <format id="17">
                            <fileFormat>MP3</fileFormat>
                            <bitRate>320</bitRate>
                            <drmFree>true</drmFree>
                          </format>
                          <format id="33">
                            <fileFormat>M4A</fileFormat>
                            <bitRate>320</bitRate>
                            <drmFree>true</drmFree>
                          </format>
                        </formats>
                        <popularity>0</popularity>
                      </release>
                      <url>http://www.7digital.com/artist/happy-birthday/release/happy-birthday-2/?partner=1401&h=01</url>
                      <price>
                        <currency code="GBP">¬£</currency>
                        <value>0.99</value>
                        <formattedPrice>¬£0.99</formattedPrice>
                        <rrp>0.99</rrp>
                        <formattedRrp>¬£0.99</formattedRrp>
                        <onSale>false</onSale>
                      </price>
                      <streamingReleaseDate>2010-09-03T00:00:00Z</streamingReleaseDate>
                      <discNumber>1</discNumber>
                      <popularity>0.47</popularity>
                      <number>1</number>
                    </track>
                  </searchResult>
                  <searchResult>
                    <type>track</type>
                    <score>5.88172</score>
                    <track id="34953514">
                      <title>Happy (Because I'm Happy)</title>
                      <version/>
                      <artist id="2175937">
                        <name>Because I'm Happy</name>
                        <appearsAs>Because I'm Happy</appearsAs>
                        <url>http://www.7digital.com/artist/because-im-happy/?partner=1401</url>
                      </artist>
                      <duration>232</duration>
                      <explicitContent>false</explicitContent>
                      <isrc>DEHT41303019</isrc>
                      <type>audio</type>
                      <release id="3299188">
                        <title>Happy</title>
                        <version/>
                        <type>Single</type>
                        <artist id="2175937">
                          <name>Because I'm Happy</name>
                          <appearsAs>Because I'm Happy</appearsAs>
                          <url>http://www.7digital.com/artist/because-im-happy/?partner=1401</url>
                        </artist>
                        <url>http://www.7digital.com/artist/because-im-happy/release/happy/?partner=1401</url>
                        <image>http://artwork-cdn.7static.com/static/img/sleeveart/00/032/991/0003299188_50.jpg</image>
                        <releaseDate>2014-02-07T00:00:00Z</releaseDate>
                        <formats availableDrmFree="true">
                          <format id="17">
                            <fileFormat>MP3</fileFormat>
                            <bitRate>320</bitRate>
                            <drmFree>true</drmFree>
                          </format>
                          <format id="33">
                            <fileFormat>M4A</fileFormat>
                            <bitRate>320</bitRate>
                            <drmFree>true</drmFree>
                          </format>
                        </formats>
                        <popularity>0</popularity>
                      </release>
                      <url>http://www.7digital.com/artist/because-im-happy/release/happy/?partner=1401&h=01</url>
                      <price>
                        <currency code="GBP">¬£</currency>
                        <value>0.99</value>
                        <formattedPrice>¬£0.99</formattedPrice>
                        <rrp>0.99</rrp>
                        <formattedRrp>¬£0.99</formattedRrp>
                        <onSale>false</onSale>
                      </price>
                      <streamingReleaseDate>2014-02-07T00:00:00Z</streamingReleaseDate>
                      <discNumber>1</discNumber>
                      <popularity>0.42</popularity>
                      <number>1</number>
                    </track>
                  </searchResult>
                </searchResults>
              </response>
                      
          application/json:
            example: |  
              {
                  "status": "ok",
                  "version": "1.2",
                  "searchResults": {
                      "page": 1,
                      "pageSize": 2,
                      "totalItems": 86776,
                      "searchResult": [
                          {
                              "type": "track",
                              "score": 6.4365425,
                              "track": {
                                  "id": 10353559,
                                  "title": "Happy Birthday To You",
                                  "version": "",
                                  "artist": {
                                      "id": "571009",
                                      "name": "Happy Birthday",
                                      "appearsAs": "Happy Birthday",
                                      "url": "http://www.7digital.com/artist/happy-birthday/?partner=1401"
                                  },
                                  "duration": 35,
                                  "explicitContent": false,
                                  "isrc": "DEHB20700052",
                                  "type": "audio",
                                  "release": {
                                      "id": 940630,
                                      "title": "Happy Birthday!",
                                      "version": "",
                                      "type": "Single",
                                      "artist": {
                                          "id": "571009",
                                          "name": "Happy Birthday",
                                          "appearsAs": "Happy Birthday",
                                          "url": "http://www.7digital.com/artist/happy-birthday/?partner=1401"
                                      },
                                      "url": "http://www.7digital.com/artist/happy-birthday/release/happy-birthday-2/?partner=1401",
                                      "image": "http://artwork-cdn.7static.com/static/img/sleeveart/00/009/406/0000940630_50.jpg",
                                      "releaseDate": "2010-09-03T00:00:00+01:00",
                                      "formats": {
                                          "availableDrmFree": true,
                                          "format": [
                                              {
                                                  "id": 17,
                                                  "fileFormat": "MP3",
                                                  "bitRate": 320,
                                                  "drmFree": true,
                                                  "priority": 11
                                              },
                                              {
                                                  "id": 33,
                                                  "fileFormat": "MP4",
                                                  "bitRate": 320,
                                                  "drmFree": true,
                                                  "priority": 21
                                              }
                                          ]
                                      },
                                      "popularity": 0
                                  },
                                  "url": "http://www.7digital.com/artist/happy-birthday/release/happy-birthday-2/?partner=1401&h=01",
                                  "price": {
                                      "currency": {
                                          "code": "GBP",
                                          "symbol": "¬£"
                                      },
                                      "value": "0.99",
                                      "formattedPrice": "¬£0.99",
                                      "onSale": false
                                  },
                                  "streamingReleaseDate": "2010-09-03T00:00:00+01:00"
                              }
                          },
                          ...
                      ]
                  }
              }
/tag:

  get:
    description: |
            This method returns a list of all available tags.

    responses:
      200:
        body:
          application/xml:
            example: |
              <response status="ok" version="1.2" xsi:noNamespaceSchemaLocation="http://api.7digital.com/1.2/static/7digitalAPI.xsd">
                <tags>
                  <page>1</page>
                  <pageSize>10</pageSize>
                  <totalItems>471</totalItems>
                  <tag id="pop">
                    <text>pop</text>
                    <url>http://www.7digital.com/tags/pop?partner=1401</url>
                    <count>328620</count>
                  </tag>
                  <tag id="electronic">
                    <text>rock</text>
                    <url>http://www.7digital.com/tags/electronic?partner=1401</url>
                    <count>electronic</count>
                  </tag>        
                  ...
                 </tags>
              </response>
/artist/tags:

  get:
    description: |
            This method returns all tags associated with the given artist.
    queryParameters:
      artistId:
        type: integer
        required: true
        description: |
                The unique identifier of the artist.


    responses:
      200:
        body:
          application/xml:
            example: |
              
              	
              <response status="ok" version="1.2" xsi:noNamespaceSchemaLocation="http://api.7digital.com/1.2/static/7digitalAPI.xsd">
              <tags>
              <page>1</page>
              <pageSize>10</pageSize>
              <totalItems>4</totalItems>
              <tag id="rock">
              <text>rock</text>
              <url>http://www.7digital.com/tags/rock?partner=1401</url>
              </tag>
              <tag id="pop">
              <text>pop</text>
              <url>http://www.7digital.com/tags/pop?partner=1401</url>
              </tag>
              <tag id="alternative">
              <text>alternative</text>
              <url>
              http://www.7digital.com/tags/alternative?partner=1401
              </url>
              </tag>
              <tag id="2000s">
              <text>2000s</text>
              <url>http://www.7digital.com/tags/2000s?partner=1401</url>
              </tag>
              </tags>
              </response>
              
          application/json:
            example: |  
              {
                "status": "ok",
                "version": "1.2",
                "tags": {
                  "page": 1,
                  "pageSize": 10,
                  "totalItems": 4,
                  "tag": [
                    {
                      "id": "rock",
                      "text": "rock",
                      "url": "http://www.7digital.com/tags/rock?partner=1401"
                    },
                    {
                      "id": "pop",
                      "text": "pop",
                      "url": "http://www.7digital.com/tags/pop?partner=1401"
                    },
                    {
                      "id": "alternative",
                      "text": "alternative",
                      "url": "http://www.7digital.com/tags/alternative?partner=1401"
                    },
                    {
                      "id": "2000s",
                      "text": "2000s",
                      "url": "http://www.7digital.com/tags/2000s?partner=1401"
                    }
                  ]
                }
              }
              
/artist/bytag/top:

  get:
    description: |
            This method returns a list of most popular artists tagged by a given tag or list of tags. If multiple tags are supplied only artists matching all of them will be returned.
    queryParameters:
      tags:
        type: string
        required: true
        description: |
                A single or comma separated list of tags.
      streamable:
        type: boolean
        required: false
        description: |
                If provided search results will contain only artists that can/cannot be streamed
      country:
        type: string
        required: false
        description: |
                ; 2 letter ISO country code of the country whose artists you would like to search; 
      page:
        type: integer
        required: false
        description: |
                Page number of the result set. If not supplied, defaults to 1
      pageSize:
        type: integer
        required: false
        description: |
                Number of items to be returned per page. If not supplied this defaults to 10. Maximum page size is 50
      imageSize:
        type: integer
        required: false
        description: |
                ; The requested width of the image in pixels; 


    responses:
      200:
        body:
          application/xml:
            example: |
              <response status="ok" version="1.2">
              	<taggedResults>
              		<page>1</page>
              		<pageSize>2</pageSize>
              		<totalItems>439</totalItems>
              		<type>artist</type>
              		<taggedItem>
              			<artist id="20">
              				<name>Coldplay</name>
              				<sortName>Coldplay</sortName>
              				<url>http://www.7digital.com/artist/coldplay/?partner=1401</url>
              				<image>http://artwork-cdn.7static.com/static/img/artistimages/00/000/000/0000000020_150.jpg</image>
              				<popularity>0.81</popularity>
              			</artist>
              		</taggedItem>
              		<taggedItem>
              			<artist id="222">
              				<name>Maroon 5</name>
              				<sortName>Maroon 5</sortName>
              				<url>http://www.7digital.com/artist/maroon-5/?partner=1401</url>
              				<image>http://artwork-cdn.7static.com/static/img/artistimages/00/000/002/0000000222_150.jpg</image>
              				<popularity>0.81</popularity>
              			</artist>
              		</taggedItem>
              	</taggedResults>
              </response>
                      
          application/json:
            example: |  
              {
                  "status": "ok",
                  "version": "1.2",
                  "taggedResults": {
                      "page": 1,
                      "pageSize": 2,
                      "totalItems": 438,
                      "type": "artist",
                      "taggedItem": [
                          {
                              "artist": {
                                  "id": 222,
                                  "name": "Maroon 5",
                                  "sortName": "Maroon 5",
                                  "url": "http://www.7digital.com/artist/maroon-5/?partner=1401",
                                  "image": "http://artwork-cdn.7static.com/static/img/artistimages/00/000/002/0000000222_150.jpg",
                                  "popularity": 0.91
                              }
                          },
                         ...
                      ]
                  }
              }
/release/tags:

  get:
    description: |
            This method returns all tags associated with the given release.
    queryParameters:
      releaseId:
        type: integer
        required: true
        description: |
                The unique identifier of the release.


    responses:
      200:
        body:
          application/xml:
            example: |
              <response status="ok" version="1.2" xsi:noNamespaceSchemaLocation="http://api.7digital.com/1.2/static/7digitalAPI.xsd">
                <tags>
                <page>1</page>
                <pageSize>10</pageSize>
                <totalItems>5</totalItems>
                <tag id="rock">
                  <text>rock</text>
                  <url>http://www.7digital.com/tags/rock</url>
                </tag>
                <tag id="pop">
                  <text>pop</text>
                  <url>http://www.7digital.com/tags/pop</url>
                </tag>
                <tag id="electronic">
                  <text>electronic</text>
                  <url>http://www.7digital.com/tags/electronic</url>
                </tag>
                <tag id="indie-rock">
                  <text>indie rock</text>
                  <url>http://www.7digital.com/tags/indie-rock</url>
                </tag>
                <tag id="2000s">
                  <text>2000s</text>
                  <url>http://www.7digital.com/tags/2000s</url>
                </tag>
                </tags>
              </response>
                      
/release/bytag/new:

  get:
    description: |
            ; This endpoint returns a list of releases matching a specified genre, ordered by most recent release date.; 
    queryParameters:
      tags:
        type: string
        required: true
        description: |
                genre to filter by (e.g. tags=rock)
      streamable:
        type: boolean
        required: false
        description: |
                If provided search results will contain only releases that can/cannot be streamed
      country:
        type: string
        required: false
        description: |
                ; 2 letter ISO country code of the country whose releases you would like to search; 
      page:
        type: integer
        required: false
        description: |
                Page number of the result set. If not supplied, defaults to 1
      pageSize:
        type: integer
        required: false
        description: |
                Number of items to be returned per page. If not supplied this defaults to 10. Maximum page size is 50
      imageSize:
        type: integer
        required: false
        description: |
                ; The requested width of the image in pixels; 


    responses:
      200:
        body:
          application/xml:
            example: |
              <response status="ok" version="1.2" xsi:noNamespaceSchemaLocation="http://api.7digital.com/1.2/static/7digitalAPI.xsd">
                 <taggedResults>
                   <page>2</page>
                   <pageSize>2</pageSize>
                   <totalItems>143673</totalItems>
                   <type>release</type>
                   <taggedItem>
                     <release id="2205934">
                       <title>Return of the gaucho</title>
                       <version/>
                       <type>Album</type>
                       <barcode>5700907236803</barcode>
                       <year>2013</year>
                       <explicitContent>false</explicitContent>
                       <artist id="1534502">
                         <name>Powderhog</name>
                         <appearsAs>Powderhog</appearsAs>
                         <url>http://www.7digital.com/artist/powderhog/?partner=1401</url>
                       </artist>
                       <url>http://www.7digital.com/artist/powderhog/release/return-of-the-gaucho/?partner=1401</url>
                       <image>http://artwork-cdn.7static.com/static/img/sleeveart/00/022/059/0002205934_50.jpg</image>
                       <releaseDate>2013-04-18T00:00:00+01:00</releaseDate>
                       <addedDate>2013-03-28T11:31:07+00:00</addedDate>
                       <price>
                         <currency code="GBP">¬£</currency>
                         <value>7.99</value>
                         <formattedPrice>¬£7.99</formattedPrice>
                         <rrp>7.99</rrp>
                         <formattedRrp>¬£7.99</formattedRrp>
                         <onSale>false</onSale>
                       </price>
                       <popularity>0.3</popularity>
                       <streamingReleaseDate>2013-04-18T00:00:00+01:00</streamingReleaseDate>
                       <duration>2724</duration>
                       <trackCount>12</trackCount>
                     </release>
                   </taggedItem>
                   ...
                 </taggedResults>
               </response>
          application/json:
            example: |  
              {
              "status": "ok",
              "version": "1.2",
              "taggedResults": {
                  "page": 2,
                  "pageSize": 2,
                  "totalItems": 143673,
                  "type": "release",
                  "taggedItem": [
                      {
                          "release": {
                              "id": 2205934,
                              "title": "Return of the gaucho",
                              "version": "",
                              "type": "Album",
                              "barcode": "5700907236803",
                              "year": 2013,
                              "explicitContent": false,
                              "artist": {
                                  "id": "1534502",
                                  "name": "Powderhog",
                                  "appearsAs": "Powderhog",
                                  "url": "http://www.7digital.com/artist/powderhog/?partner=1401"
                              },
                              "url": "http://www.7digital.com/artist/powderhog/release/return-of-the-gaucho/?partner=1401",
                              "image": "http://artwork-cdn.7static.com/static/img/sleeveart/00/022/059/0002205934_50.jpg",
                              "releaseDate": "2013-04-18T00:00:00+01:00",
                              "addedDate": "2013-03-28T11:31:07+00:00",
                              "price": {
                                  "currency": {
                                      "code": "GBP",
                                      "symbol": "¬£"
                                  },
                                  "value": "7.99",
                                  "formattedPrice": "¬£7.99",
                                  "rrp": "7.99",
                                  "formattedRrp": "¬£7.99",
                                  "onSale": false
                              },
                              "popularity": 0.3,
                              "streamingReleaseDate": "2013-04-18T00:00:00+01:00",
                              "duration": 2724,
                              "trackCount": 12
                          }
                      },
                      ...
                  ]
              }
              }
/release/bytag/top:

  get:
    description: |
            This method returns a list of most popular releases tagged by a given tag or list of tags. If multiple tags are supplied only releases matching all of them will be returned.
    queryParameters:
      tags:
        type: string
        required: true
        description: |
                A single or comma separated list of tags.


    responses:
      200:
        body:
          application/xml:
            example: |
              <response status="ok" version="1.2" xsi:noNamespaceSchemaLocation="http://api.7digital.com/1.2/static/7digitalAPI.xsd">
                <taggedResults>
                  <page>1</page>
                  <pageSize>2</pageSize>
                  <totalItems>143850</totalItems>
                  <type>release</type>
                  <taggedItem>
                    <release id="1402123">
                      <title>The Dark Side Of The Moon (2011 - Remaster)</title>
                      <version/>
                      <type>Album</type>
                      <barcode>5099902984056</barcode>
                      <year>2011</year>
                      <explicitContent>false</explicitContent>
                      <artist id="447">
                        <name>Pink Floyd</name>
                        <appearsAs>Pink Floyd</appearsAs>
                        <url>http://www.7digital.com/artist/pink-floyd/?partner=1401</url>
                      </artist>
                      <url>http://www.7digital.com/artist/pink-floyd/release/the-dark-side-of-the-moon-2011-remaster/?partner=1401</url>
                      <image>http://artwork-cdn.7static.com/static/img/sleeveart/00/014/021/0001402123_50.jpg</image>
                      <releaseDate>2011-09-26T00:00:00+01:00</releaseDate>
                      <addedDate>2011-09-16T17:39:15+01:00</addedDate>
                      <price>
                        <currency code="GBP">¬£</currency>
                        <value>7.99</value>
                        <formattedPrice>¬£7.99</formattedPrice>
                        <rrp>7.99</rrp>
                        <formattedRrp>¬£7.99</formattedRrp>
                        <onSale>false</onSale>
                      </price>
                      <popularity>0.7</popularity>
                      <streamingReleaseDate>2011-09-26T00:00:00+01:00</streamingReleaseDate>
                      <duration>2572</duration>
                      <trackCount>10</trackCount>
                    </release>
                  </taggedItem>
                  ...
                </taggedResults>
              </response>
          application/json:
            example: |  
              {"status": "ok",
              "version": "1.2",
              "taggedResults": {
                  "page": 1,
                  "pageSize": 2,
                  "totalItems": 143850,
                  "type": "release",
                  "taggedItem": [
                      {
                          "release": {
                              "id": 1402123,
                              "title": "The Dark Side Of The Moon (2011 - Remaster)",
                              "version": "",
                              "type": "Album",
                              "barcode": "5099902984056",
                              "year": 2011,
                              "explicitContent": false,
                              "artist": {
                                  "id": "447",
                                  "name": "Pink Floyd",
                                  "appearsAs": "Pink Floyd",
                                  "url": "http://www.7digital.com/artist/pink-floyd/?partner=1401"
                              },
                              "url": "http://www.7digital.com/artist/pink-floyd/release/the-dark-side-of-the-moon-2011-remaster/?partner=1401",
                              "image": "http://artwork-cdn.7static.com/static/img/sleeveart/00/014/021/0001402123_50.jpg",
                              "releaseDate": "2011-09-26T00:00:00+01:00",
                              "addedDate": "2011-09-16T17:39:15+01:00",
                              "price": {
                                  "currency": {
                                      "code": "GBP",
                                      "symbol": "¬£"
                                  },
                                  "value": "7.99",
                                  "formattedPrice": "¬£7.99",
                                  "rrp": "7.99",
                                  "formattedRrp": "¬£7.99",
                                  "onSale": false
                              },
                              "popularity": 0.7,
                              "streamingReleaseDate": "2011-09-26T00:00:00+01:00",
                              "duration": 2572,
                              "trackCount": 10
                          }
                      },
                      ...
                      }
                  ]
              }
              }
/basket:

  get:
    description: |
            This method retrieves an existing basket and its contents.
    queryParameters:
      basketId:
        type: string
        required: true
        description: |
                ; The unique identifier of the basket as acquired by basket/create method; 
      country:
        type: string
        required: false
        description: |
                The code of the country the end user resides in. The country will default to GB if not provided.; 


    responses:
      200:
        body:
          application/xml:
            example: |
              <response status="ok" version="1.2">
                <basket id="00000000-0000-0000-0000-000000000000">
                  <itemCount>1</itemCount>
                  <price>
                    <currency code="EUR">‚Ç¨</currency>
                    <value>0.99</value>
                    <formattedPrice>0,99‚Ç¨</formattedPrice>
                  </price>
                  <amountDue>
                    <currency code="EUR">‚Ç¨</currency>
                    <amount>0.99</amount>
                    <formattedAmount>0,99‚Ç¨</formattedAmount>
                  </amountDue>
                  <basketItems>
                    <basketItem id="15284882">
                      <type>track</type>
                      <itemName>Test</itemName>
                      <artistName>Ghetto</artistName>
                      <trackId>2458384</trackId>
                      <releaseId>224820</releaseId>
                      <price>
                        <value>0.99</value>
                        <formattedPrice>0,99‚Ç¨</formattedPrice>
                      </price>
                      <amountDue>
                        <amount>0.99</amount>
                        <formattedAmount>0,99‚Ç¨</formattedAmount>
                      </amountDue>
                    </basketItem>
                  </basketItems>
                </basket>
              </response>
/basket/create:

  get:
    description: |
            This method creates an empty basket and returns the new basket with it's basketId.
    queryParameters:
      country:
        type: string
        required: false
        description: |
                The code of the country the end user resides in. The country will default to GB if not provided.; 


    responses:
      200:
        body:
          application/xml:
            example: |
              <response status="ok" version="1.2">
                <basket id="00000000-0000-0000-0000-000000000000">
                  <itemCount>0</itemCount>
                  <price>
                    <currency code="GBP">&#163;</currency>
                    <value>0</value>
                    <formattedPrice>&#163;0.00</formattedPrice>
                  </price>
                  <amountDue>
                    <currency code="GBP">&#163;</currency>
                    <amount>0</amount>
                    <formattedAmount>&#163;0.00</formattedAmount>
                  </amountDue>
                  <basketItems/>
                </basket>
              </response>
/basket/addItem:

  get:
    description: |
            This method adds a track or release to a basket.
    queryParameters:
      basketId:
        type: string
        required: true
        description: |
                ; identifier of the basket as acquired by basket/create method; 
      releaseId:
        type: integer
        required: true
        description: |
                identifier of the release to add to the basket
      trackId:
        type: integer
        required: false
        description: |
                identifier of the track being added to the basket. You must also specify the releaseId that the track belongs to.
      country:
        type: string
        required: false
        description: |
                The code of the country the end user resides in. The country will default to GB if not provided.; 
      affiliatePartner:
        type: integer
        required: false
        description: |
                Overrides affiliate tracking id when adding an item to the basket.


    responses:
      200:
        body:
          application/xml:
            example: |
              <response status="ok" version="1.2">
                <basket id="00000000-0000-0000-0000-000000000000">
                  <itemCount>1</itemCount>
                  <price>
                    <currency code="EUR">‚Ç¨</currency>
                    <value>0.99</value>
                    <formattedPrice>0,99‚Ç¨</formattedPrice>
                  </price>
                  <amountDue>
                    <currency code="EUR">‚Ç¨</currency>
                    <amount>0.99</amount>
                    <formattedAmount>0,99‚Ç¨</formattedAmount>
                  </amountDue>
                  <basketItems>
                    <basketItem id="15284882">
                      <type>track</type>
                      <itemName>Test</itemName>
                      <artistName>Ghetto</artistName>
                      <trackId>2458384</trackId>
                      <releaseId>224820</releaseId>
                      <price>
                        <value>0.99</value>
                        <formattedPrice>0,99‚Ç¨</formattedPrice>
                      </price>
                      <amountDue>
                        <amount>0.99</amount>
                        <formattedAmount>0,99‚Ç¨</formattedAmount>
                      </amountDue>
                    </basketItem>
                  </basketItems>
                </basket>
              </response>
/basket/removeItem:

  get:
    description: |
            This method removes an item from a basket.
    queryParameters:
      basketId:
        type: string
        required: true
        description: |
                ; The unique identifier of the basket as acquired by basket/create method; 
      itemId:
        type: integer
        required: true
        description: |
                basketItem ID of the item to be removed
      country:
        type: string
        required: false
        description: |
                The code of the country the end user resides in. The country will default to GB if not provided.; 


    responses:
      200:
        body:
          application/xml:
            example: |
              <response status="ok" version="1.2">
                <basket id="00000000-0000-0000-0000-000000000000">
                  <itemCount>0</itemCount>
                  <price>
                    <currency code="EUR">‚Ç¨</currency>
                    <value>0.00</value>
                    <formattedPrice>0,00‚Ç¨</formattedPrice>
                  </price>
                  <amountDue>
                    <currency code="EUR">‚Ç¨</currency>
                    <amount>0.00</amount>
                    <formattedAmount>0,00‚Ç¨</formattedAmount>
                  </amountDue>
                  <basketItems/>
                </basket>
              </response>
/basket/applyVoucher:

  post:
    description: |
            This method applies a voucher to a basket. If a valid voucher code has been applied the response will return an updated basket with the applied discount reflected in the amountDue element of the basket item the voucher has been applied to. The amountDue element of the basket total will be updated accordingly as well. The price element will remain unchanged and will reflect the original catalogue price of the item and basket. ; To finalize purchase the basket needs to be checked-out using user/purchase/basket method. ; If the voucher code cannot be redeemed against any items in the basket an error response will be returned.
    queryParameters:
      basketId:
        type: string
        required: true
        description: |
                ; The unique identifier of the basket as acquired by basket/create method; 
      voucherCode:
        type: string
        required: true
        description: |
                Voucher code that will be redeemed against items in the basket.
      country:
        type: string
        required: false
        description: |
                The code of the country the end user resides in. The country will default to GB if not provided.; 


    responses:
      200:
        body:
          application/xml:
            example: |
              <response status="ok" version="1.2">
                <basket id="00000000-0000-0000-0000-000000000000">
                  <itemCount>1</itemCount>
                  <price>
                    <currency code="EUR">‚Ç¨</currency>
                    <value>0.99</value>
                    <formattedPrice>0,99‚Ç¨</formattedPrice>
                  </price>
                  <amountDue>
                    <currency code="EUR">‚Ç¨</currency>
                    <amount>0</amount>
                    <formattedAmount>0,00‚Ç¨</formattedAmount>
                  </amountDue>
                  <basketItems>
                    <basketItem id="15284882">
                      <type>track</type>
                      <itemName>Test</itemName>
                      <artistName>Ghetto</artistName>
                      <trackId>2458384</trackId>
                      <releaseId>224820</releaseId>
                      <price>
                        <value>0.99</value>
                        <formattedPrice>0,99‚Ç¨</formattedPrice>
                      </price>
                      <amountDue>
                        <amount>0</amount>
                        <formattedAmount>0,00‚Ç¨</formattedAmount>
                      </amountDue>
                      <discount>
                        <type>Voucher</type>
                      </discount>
                    </basketItem>
                  </basketItems>
                </basket>
              </response>
/oauth/requesttoken:

  post:
    description: |
            ; Requests a new request token for 3-legged authentication. As per OAuth spec the default format of the response is "application/x-www-form-urlencoded" unless you explicitly specify "application/xml" or "application/json" in the request "Accept" header.; NB: In order to avoid breaking changes for API consumers who integrated with this endpoint in the past if you invoke this API call with HTTP method "GET" an XML response is returned by default. ; 
    queryParameters:
      oauth_consumer_key:
        type: string
        required: true
        description: |
                The only requirement for this method is that the request is OAuth signed.
      xoauth_client_identifier:
        type: string
        required: false
        description: |
                An arbitrary string that will be stored with the token.  This string will be displayed to the user along with the token for easier reference to an account or device that the token is linked to. The identifier has to be meaningful to the end user, e.g. "IMEI: 1234564546" (device serial number), "john2004" (user's login name on your website).


    responses:
      200:
        body:
          application/xml:
            example: |
              <response status="ok" version="1.2">
                <oauth_request_token>
                  <oauth_token>ABCD123456</oauth_token>
                  <oauth_token_secret>d2I8uj7yaoa39KKdu3upasybu98f89fln</oauth_token_secret>
                </oauth_request_token>
              </response>
                        
          application/json:
            example: |  
              {
              					"status":"ok",
              					"version":"1.2",
              					"oauth_request_token":
              						{
              							"oauth_token":"ABCD123456",
              							"oauth_token_secret":"d2I8uj7yaoa39KKdu3upasybu98f89fln"
              							}
              						}
                        
/User authentication - authorising a request token:

  get:
    description: |
            ; This is not an API method, but the URL that displays the form that a user will authenticate themselves to 7digital with.; After authenticating the user, the request will be redirected back to the API consumer's website (if returnUrl has been supplied).; 
    queryParameters:
      oauth_token:
        type: string
        required: true
        description: |
                The oauth_token value returned to the API consumer from an oauth/requesttoken request.
      oauth_callback:
        type: string
        required: false
        description: |
                The URL that 7digital will use to hand the user authentication back to the requesting API consumer.


    responses:
      200:
        body:
          application/xml:
            example: |
              HTTP/1.x 302 Found
              Location: http://api-consumer.com/handback?consumerparam=value?oauth_token=AAAAAA&status=Authorised
/oauth/accesstoken:

  post:
    description: |
            ; Grants an access token in exchange for an authorised request token.  This method must be OAuth signed, using your consumer secret and the request token secret.; As per OAuth spec the default format of the response is "application/x-www-form-urlencoded" unless you explicitly specify "application/xml" or "application/json" in the request "Accept" header.; Although not expiring automatically after a certain period of time, access tokens (and also authorised request tokens) can be revoked by users at any time.; In the near future we will  also enforce a limit of maximum of 3 access tokens that can be active at the same time per one 7digital user account, api consumer key and xoauth_client_identifier combination. If a user has already approved 3 access tokens for your service, the next time you acquire another access token for this same user the first access token will automatically expire.; If the nature of your service allows/requires users to maintain multiple connections to a single 7digital account; you are advised to use a distinct xoauth_client_identifier for each connection.; E.g. if a user of your service has registered 5 different accounts ("joe_home", "joe_work", etc) and they want to link; all these accounts to a single 7digital account you need to provide an xoauth_client_identifier (xoauth_client_identifier=joe_home, xoauth_client_identifier=joe_work, etc) at the stage of acquiring an oauth/requesttoken.; For device based integrations we recommend to use device names (if available) or serial numbers or IMEIs for mobiles as the identifier.; NB: In order to avoid breaking changes for API consumers who integrated with this endpoint in the past if you invoke this API call with HTTP method "GET" an XML response is returned by default.           ; 
    queryParameters:
      oauth_token:
        type: string
        required: true
        description: |
                The original request token.


    responses:
      200:
        body:
          application/xml:
            example: |
              <response status="ok" version="1.2">
                <oauth_access_token>
                  <oauth_token>E3w4FV3oirRfj4KfT7alOpa893mmn4HJ</oauth_token>
                  <oauth_token_secret>923kj3Kspa304n4Oamd3201pLkgjeM32</oauth_token_secret>
                </oauth_access_token>
              </response>
                        
          application/json:
            example: |  
              {
              					"status":"ok",
              					"version":"1.2",
              					"oauth_access_token":
              						{
              							"oauth_token":"E3w4FV3oirRfj4KfT7alOpa893mmn4HJ",
              							"oauth_token_secret":"923kj3Kspa304n4Oamd3201pLkgjeM32"
              							}
              						}
                        
/playlists:

  get:
    description: |
            ; Returns a list of all public playlists. If an oauth_token is provided then also given users' private playlists will be included in the response.; The list can be filtered to display only lists created by a specific user by providing a user parameter. (Currently only 7digital user IDs are supported for filtering). See also user/playlist API method for alternate way of listing only playlists owned by current user.; 
    queryParameters:
      user:
        type: string
        required: false
        description: |
                This allows you to pass the id of a user you wish to view the playlists of a specific user. It must be in the format id:{userId}
      oauth_token:
        type: string
        required: false
        description: |
                User's OAuth access token - allows user to view Private playlist if it belongs to them
      page:
        type: integer
        required: false
        description: |
                ; Page number of the result set. If not supplied, defaults to 1; 
      pageSize:
        type: integer
        required: false
        description: |
                Number of items to be returned per page. If not supplied, defaults to 10. Maximum page size is 500


    responses:
      200:
        body:
          application/xml:
            example: |
              HTTP/1.1 200 OK
              
              <response status="ok" version="1.2">
              	<playlists>
              		<page>1</page>
              		<pageSize>10</pageSize>
              		<totalItems>1</totalItems>
              		<playlist id="5231cf08278a490db4ede678">
              			<lastUpdated>2013-09-12T14:26:13.108Z</lastUpdated>
              			<name>My Chillout Mix</name>
              			<links>
              				<link rel="self" href="http://api.7digital.com/1.2/playlists/5231cf08278a490db4ede678"/>
              				<link rel="details" href="http://api.7digital.com/1.2/playlists/5231cf08278a490db4ede678/details"/>
              				<link rel="tracks" href="http://api.7digital.com/1.2/playlists/5231cf08278a490db4ede678/tracks"/>
              			</links>
              			<trackCount>2</trackCount>
              			<visibility>Private</visibility>
              			<annotations>
              				<annotation key="name">value</annotation>
              			</annotations>
              		</playlist>
              	</playlists>
              </response>
                    
          application/json:
            example: |  
              {
              	"status":"ok",
              	"version":"1.2",
              	"playlists":{
              		"page":1,
              		"pageSize":10,
              		"totalItems":1,
              		"playlist":[
              			{
              				id: "51ed5cfec9021614f462bb7b",
              				name: "My Chillout Mix",
              				links: [
              				{
              					rel: "self",
              					href: "http://api.7digital.com/1.2/playlists/51ed5cfec9021614f462bb7b"
              				},
              				{
              					rel: "details",
              					href: "http://api.7digital.com/1.2/playlists/51ed5cfec9021614f462bb7b/details"
              				},
              				{
              					rel: "tracks",
              					href: "http://api.7digital.com/1.2/playlists/51ed5cfec9021614f462bb7b/tracks"
              				}],
              				trackCount: 7,
              				visibility: "Public",
              				annotations: {
              					key: "value"
              				}
              				lastUpdated: "2013-10-02T12:16:04.615Z"
              			}
              		]
              	}
              }
  post:
    description: |
            ; Creates a new playlist owned by the current user. Each playlist has to have an owner, i.e. oauth_token representing a user has to be provided.; When creating a new playlist you can provide an inital track listing in the request or create an empty playlists by leaving the "tracks" array empty.; 
    queryParameters:
      oauth_token:
        type: string
        required: true
        description: |
                User's OAuth access token


    responses:
      200:
        body:
          application/xml:
            example: |
              HTTP/1.1 200 OK
              Location: http://api.7digital.com/1.2/playlists/51ed5cfec9021614f462bb7b
/playlists/{playlistId}:

  get:
    description: |
            ; Returns playlist details and track listing. Access to private playlists is only allowed when an oauth_token of the playlist owner is provided.; To check whether playlist has been updated since it was last retrieved you can provide an If-None-Matched or If-Modified-Since HTTP header with your request and the API will respond with 304 NotModified if the playlist has not been modified (or return a standard full response if it has been modified).; 
    queryParameters:
      oauth_token:
        type: string
        required: false
        description: |
                User's OAuth access token - allows user to view private playlist if it belongs to them


    responses:
      200:
        body:
          application/xml:
            example: |
              <response status="ok" version="1.2">
              	<playlist id="51ed5cfec9021614f462bb7b">
                	<lastUpdated>2013-10-02T12:16:04.615Z</lastUpdated>
              	  <name>My Chillout Mix</name>
              	  <visibility>Private</visibility>
              	  <annotations>
              		<annotation key="key">value</annotation>
              	  </annotations>
                  <tracks>
                    <track>
                      <playlistItemId>524ae1a1c90216252c1837ab</playlistItemId>
                  		<trackId>29675004</trackId>
              			  <trackTitle>Lux</trackTitle>
                      <trackVersion></trackVersion>
              		  	<artistAppearsAs>Empire Of The Sun</artistAppearsAs>
                      <releaseId>2766569</releaseId>
              			  <releaseTitle>Ice On The Dune</releaseTitle>
              				<releaseArtistAppearsAs>Ice On The Dune</releaseArtistAppearsAs>
              				<releaseVersion/>
                      <source>7digital</source>
                      <audioUrl>http://stream.svc.7digital.net/stream/catalogue?trackId=5495893</audioUrl>
                      <user>id:4874383</user>
                      <image>http://artwork-cdn.7static.com/static/img/sleeveart/00/004/963/0000496338_$size$.jpg</image>
                    <track>
              	  </tracks>
              	</playlist>
              </response>
          application/json:
            example: |  
              {
              	status: "ok",
              	version: "1.2",
              	playlist: {
              		id: "51ed5cfec9021614f462bb7b",
              		name: "My Chillout Mix",
              		visibility: "Private",
              		annotations: {
              			key: "value"
              		},
              		tracks: [
              			{
              				playlistItemId: "52cd88c2c902161660aeab80",
              				trackId: "5495893",
              				trackTitle: "No You Girls",
              				trackVersion: "Trentmoller Remix",
              				artistAppearsAs: "Franz Ferdinand",
              				releaseId: "496338",
              				releaseTitle: "No You Girls Remixes Part 2",
              				releaseArtistAppearsAs: "Franz Ferdinand",
              				releaseVersion: "Digital Download",
              				source: "7digital",
              				audioUrl: "http://stream.svc.7digital.net/stream/catalogue?trackId=5495893",
              				user: "id:4874383",
              				image: "http://artwork-cdn.7static.com/static/img/sleeveart/00/004/963/0000496338_$size$.jpg"
              			}
              		],
              		lastUpdated: "2013-10-02T12:16:04.615Z"
              	}
              }
  post:
    description: |
            ; Replaces a playlist at {playlistId} with the supplied playlist. The playlist can only be replaced by its owner, i.e. oauth_token representing the user has to be provided.; This method is intentded to be used when multiple changes have been made to playlist off-line. If the user is online each individual change to playlist should be submitted as it happens using the endpoints for modifying playlist details, adding and deleting individual tracks.; 
    queryParameters:
      oauth_token:
        type: string
        required: true
        description: |
                User's OAuth access token


    responses:
      200:
        body:
          application/xml:
            example: |
              HTTP/1.1 200 OK
              Location: http://api.7digital.com/1.2/playlists/51ed5cfec9021614f462bb7b
  delete:
    description: |
            ; Deletes the playlist at {playlistId}. The playlist can only be deleted by its owner, i.e. oauth_token representing the user has to be provided.; NB: This action is irreversible - deleted playlists can't be recovered. We advise you to ask users for confirmation or delay calling the API by couple of seconds whilst providing users with option to undo their action.; 
    queryParameters:
      oauth_token:
        type: string
        required: true
        description: |
                User's OAuth access token


    responses:
      200:
        body:
          application/xml:
            example: |
              
              				HTTP/1.1 200 OK
              				Location: http://api.7digital.com/1.2/playlists/51ed5cfec9021614f462bb7b
              			
/playlists/{playlistId}/details:

  get:
    description: |
            ; Returns details of given playlist without including all playlist tracks in the response. Access to private playlists details is only allowed when an oauth_token of the playlist owner is provided.; 
    queryParameters:
      oauth_token:
        type: string
        required: false
        description: |
                User's OAuth access token, required if trying to view signed in users Private playlist


    responses:
      200:
        body:
          application/xml:
            example: |
              <response status="ok" version="1.2">
              	<playlist id="51ed5cfec9021614f462bb7b">
              		<lastUpdated>2013-10-02T12:16:04.615Z</lastUpdated>
              		<name>My Chillout Mix</name>
              		<visibility>Public</visibility>
              		<annotations>
              			<annotation key="key">value</annotation>
              		</annotations>
              	</playlist>
              </response>
          application/json:
            example: |  
              {
              	status: "ok",
              	version: "1.2",
              	playlist: {
              		id: "51ed5cfec9021614f462bb7b",
              		name: "My Chillout Mix",
              		visibility: "Public",
              		annotations: {
              			key: "value",
              		},
              		lastUpdated: "2013-10-02T12:16:04.615Z"
              	}
              }
  post:
    description: |
            ; Updates playlist details at {playlistId} with the supplied playlist details. It does not affect playlist tracks. Use this method e.g. for changing visibility of the playlist from private to public. The playlist details can only be updated by the playlist owner, i.e. oauth_token representing the user has to be provided.; 
    queryParameters:
      oauth_token:
        type: string
        required: true
        description: |
                User's OAuth access token


    responses:
      200:
        body:
          application/xml:
            example: |
              HTTP/1.1 200 OK
              Location: http://api.7digital.com/1.2/playlists/51ed5cfec9021614f462bb7b
              			
/playlists/{playlistId}/tracks:

  post:
    description: |
            ; Adds an array of tracks to the playlist at {playlistId}.  Tracks can only be added by the playlist owner, i.e. oauth_token representing the user has to be provided.; All metadata (e.g. track title, artist, etc) for tracks needs to be provided in the API call.; 
    queryParameters:
      oauth_token:
        type: string
        required: true
        description: |
                User's OAuth access token


    responses:
      200:
        body:
          application/xml:
            example: |
              <response status="ok" version="1.2">
              	<playlist id="51ed5cfec9021614f462bb7b">						
              		<name>My Chillout Mix</name>
              		<visibility>Public</visibility>
              		<lastUpdated>2013-10-02T12:16:04.615Z</lastUpdated>
              		<tracks>
              			<track>
              				<playlistItemId>52cd88c2c902161660aeab80</playlistItemId>
              				<trackId>5495893</trackId>
              				<trackTitle>No You Girls</trackTitle>
              				<trackVersion>Trentmoller Remix</trackVersion>
              				<artistAppearsAs>Franz Ferdinand</artistAppearsAs>
              				<releaseId>496338</releaseId>
              				<releaseTitle>No You Girls Remixes Part 2</releaseTitle>
              				<releaseArtistAppearsAs>Franz Ferdinand</releaseArtistAppearsAs>
              				<releaseVersion/>
              				<source>7digital</source>
              				<audioUrl>http://stream.svc.7digital.net/stream/catalogue?trackId=5495893</audioUrl>
              				<user>id:4874383</user>
              				<image>http://artwork-cdn.7static.com/static/img/sleeveart/00/004/963/0000496338_$size$.jpg</image>
              			</track>
              			<track>
              				<playlistItemId>52cd88c2c902161660aeab81</playlistItemId>
              				<trackId>3121833</trackId>
              				<trackTitle>Kids</trackTitle>
              				<trackVersion></trackVersion>
              				<artistAppearsAs>MGMT</artistAppearsAs>
              				<releaseId>280218</releaseId>
              				<releaseTitle>Oracula Spectacular</releaseTitle>
              				<releaseArtistAppearsAs>MGMT</releaseArtistAppearsAs>
              				<releaseVersion/>
              				<source>7digital</source>
              				<audioUrl>http://stream.svc.7digital.net/stream/catalogue?trackId=3121833</audioUrl>
              				<user>id:4874383</user>
              				<image>http://artwork-cdn.7static.com/static/img/sleeveart/00/002/802/0000280218_$size$.jpg</image>
              			</track>		
              		</tracks>
              		<annotations />
              	</playlist>
              </response>
          application/json:
            example: |  
              {
              	"status": "ok",
              	"version": "1.2",
              	"playlist": {
              		"id": "51ed5cfec9021614f462bb7b",
              		"name": "My Chillout Mix",
              		"visibility": "Public",
              		"lastUpdated": "2013-10-02T12:16:04.615Z",
              		"annotations": { },
              		"tracks" : [
              			{
              				playlistItemId: "52cd88c2c902161660aeab80",
              				trackId: "5495893",
              				trackTitle: "No You Girls",
              				trackVersion: "Trentmoller Remix",
              				artistAppearsAs: "Franz Ferdinand",
              				releaseId: "496338",
              				releaseTitle: "No You Girls Remixes Part 2",
              				releaseArtistAppearsAs: "Franz Ferdinand",
              				releaseVersion: "Digital Download",
              				source: "7digital",
              				audioUrl: "http://stream.svc.7digital.net/stream/catalogue?trackId=5495893",
              				user: "id:4874383",
              				image: "http://artwork-cdn.7static.com/static/img/sleeveart/00/004/963/0000496338_$size$.jpg"
              			},
              			{
              				playlistItemId: "52cd88c2c902161660aeab81",
              				trackId: "3121833",
              				trackTitle: "Kids",
              				trackVersion: "",
              				artistAppearsAs: "MGMT",
              				releaseId: "280218",
              				releaseTitle: "Oracula Spectacular",
              				releaseArtistAppearsAs: "MGMT",
              				releaseVersion: "",
              				source: "7digital",
              				audioUrl: "http://stream.svc.7digital.net/stream/catalogue?trackId=3121833",
              				user: "id:4874383",
              				image: "http://artwork-cdn.7static.com/static/img/sleeveart/00/002/802/0000280218_$size$.jpg"			
              			}
              		]
              	}
              }
                    
/playlists/{playlistId}/tracks/{playlisttrackid}:

  delete:
    description: |
            ; Removes the specified track {playlisttrackid} from the specified playlist at {playlistId}.  Tracks can only be removed by the playlist owner, i.e. oauth_token representing the user has to be provided.; 
    queryParameters:
      oauth_token:
        type: string
        required: true
        description: |
                User's OAuth access token


    responses:
      200:
        body:
          application/xml:
            example: |
              HTTP/1.1 200 OK
/playlists/{playlistId}/tracks/{playlisttrackid}/move:

  post:
    description: |
            ; Moves the specified track {playlisttrackid} from the specified playlist at {playlistId}, to a location dictated by the  "pos" parameter of the POST request data. Tracks can only be moved by the playlist owner, i.e. oauth_token representing the user has to be provided.; The "pos" parameter is the playlistTrackId of the track you wish your selected track to appear AFTER. A value of "0" indicates you wish to place the track at the front of the list.; NOTE: Tracks can also be rearranged at the client side and then posted back to the ~/playlists/{playlistId} endpoint, this offers a lightweight way of doing the same thing.; Response with Http OK and the newly reordered playlist; 
    queryParameters:
      oauth_token:
        type: string
        required: true
        description: |
                User's OAuth access token


    responses:
      200:
        body:
          application/xml:
            example: |
              
              			HTTP/1.1 200 OK
              			<response status="ok" version="1.2">
              	<playlist id="51ed5cfec9021614f462bb7b">						
              		<name>My Chillout Mix</name>
              		<visibility>Public</visibility>
              		<lastUpdated>2013-10-02T12:16:04.615Z</lastUpdated>
              	
              	<tracks>
                  <track>
                    <playlistItemId>52cd88c2c902161660aeab80</playlistItemId>
                  	<trackId>5495893</trackId>
              			<trackTitle>No You Girls</trackTitle>
                    <trackVersion>Trentmoller Remix</trackVersion>
              		  <artistAppearsAs>Franz Ferdinand</artistAppearsAs>
                    <releaseId>496338</releaseId>
              			<releaseTitle>No You Girls Remixes Part 2</releaseTitle>
              			<releaseArtistAppearsAs>Franz Ferdinand</releaseArtistAppearsAs>
              			<releaseVersion/>
                    <source>7digital</source>
                    <audioUrl>http://stream.svc.7digital.net/stream/catalogue?trackId=5495893</audioUrl>
                    <user>id:4874383</user>
                    <image>http://artwork-cdn.7static.com/static/img/sleeveart/00/004/963/0000496338_$size$.jpg</image>
                  </track>
              		<track>
                    <playlistItemId>52cd88c2c902161660aeab81</playlistItemId>
                  	<trackId>3121833</trackId>
              			<trackTitle>Kids</trackTitle>
                    <trackVersion></trackVersion>
              		  <artistAppearsAs>MGMT</artistAppearsAs>
                    <releaseId>280218</releaseId>
              			<releaseTitle>Oracula Spectacular</releaseTitle>
              			<releaseArtistAppearsAs>MGMT</releaseArtistAppearsAs>
              			<releaseVersion/>
                    <source>7digital</source>
                    <audioUrl>http://stream.svc.7digital.net/stream/catalogue?trackId=3121833</audioUrl>
                    <user>id:4874383</user>
                    <image>http://artwork-cdn.7static.com/static/img/sleeveart/00/002/802/0000280218_$size$.jpg</image>
                  </track>		
              	</tracks>
              	<annotations />
              	</playlist>
              </response>
          application/json:
            example: |  
              
              			HTTP/1.1 200 OK
              			{
              	"status": "ok",
              	"version": "1.2",
              	"playlist": {
              		"id": "51ed5cfec9021614f462bb7b",
              		"name": "My Chillout Mix",
              		"visibility": "Public",
              		"tracks" : [
              			{
              				playlistItemId: "52cd88c2c902161660aeab80",
                      trackId: "5495893",
                      trackTitle: "No You Girls",
                      trackVersion: "Trentmoller Remix",
                      artistAppearsAs: "Franz Ferdinand",
                      releaseId: "496338",
                      releaseTitle: "No You Girls Remixes Part 2",
                      releaseArtistAppearsAs: "Franz Ferdinand",
                      releaseVersion: "Digital Download",
                      source: "7digital",
                      audioUrl: "http://stream.svc.7digital.net/stream/catalogue?trackId=5495893",
                      user: "id:4874383",
                      image: "http://artwork-cdn.7static.com/static/img/sleeveart/00/004/963/0000496338_$size$.jpg"
              			},
                    {
                      playlistItemId: "52cd88c2c902161660aeab81",
                      trackId: "3121833",
                      trackTitle: "Kids",
                      trackVersion: "",
                      artistAppearsAs: "MGMT",
                      releaseId: "280218",
                      releaseTitle: "Oracula Spectacular",
                      releaseArtistAppearsAs: "MGMT",
                      releaseVersion: "",
                      source: "7digital",
                      audioUrl: "http://stream.svc.7digital.net/stream/catalogue?trackId=3121833",
                      user: "id:4874383",
                      image: "http://artwork-cdn.7static.com/static/img/sleeveart/00/002/802/0000280218_$size$.jpg"			
              			}
              		],
              		
              		"annotations": { },
              		"lastUpdated": "2013-10-02T12:16:04.615Z"
              	}
              }
              			
/user/playlists:

  get:
    description: |
            ; Return a list of playlists owned by current user (identified by the provided access token). This method is an alias for GET /playlists?user=<CURRENT_USER_ID> without needing to know the current user's ID.; 
    queryParameters:
      oauth_token:
        type: string
        required: true
        description: |
                User's OAuth access token


    responses:
      200:
        body:
          application/xml:
            example: |
              
              <response status="ok" version="1.2">
              	<playlists>
              		<page>1</page>
              		<pageSize>10</pageSize>
              		<totalItems>1</totalItems>
              		<playlist id="5231cf08278a490db4ede678">
              			<lastUpdated>2013-09-12T14:26:13.108Z</lastUpdated>
              			<name>My Chillout Mix</name>
              			<links>
                			<link rel="self" href="http://api.7digital.com/1.2/playlists/5231cf08278a490db4ede678"/>
              				<link rel="details" href="http://api.7digital.com/1.2/playlists/5231cf08278a490db4ede678/details"/>
              				<link rel="tracks" href="http://api.7digital.com/1.2/playlists/5231cf08278a490db4ede678/tracks"/>
              			</links>
              			<trackCount>2</trackCount>
              			<visibility>Private</visibility>
              			<annotations>
              				<annotation key="key">value</annotation>
              			</annotations>
              		</playlist>
              	</playlists>
              </response>
                    
          application/json:
            example: |  
              {
              	"status":"ok",
              	"version":"1.2",
              	"playlists":{
              		"page":1,
              		"pageSize":10,
              		"totalItems":1,
              		"playlist":[
              			{
              				id: "51ed5cfec9021614f462bb7b",
              				name: "My Chillout Mix",
              				links: [
              				{
              					rel: "self",
              					href: "http://api.7digital.com/1.2/playlists/51ed5cfec9021614f462bb7b"
              				},
              				{
              					rel: "details",
              					href: "http://api.7digital.com/1.2/playlists/51ed5cfec9021614f462bb7b/details"
              				},
              				{
              					rel: "tracks",
              					href: "http://api.7digital.com/1.2/playlists/51ed5cfec9021614f462bb7b/tracks"
              				}],
              				trackCount: 7,
              				visibility: "Public",
              								annotations : {
              					key: "value"
              				},
              				lastUpdated: "2013-10-02T12:16:04.615Z"
              			}
              		]
              	}
              }
/user/locker:

  get:
    description: |
            ; Returns a paged list of releases and tracks for a user's locker (collection of all purchased tracks). Each release contains an "available" (true/false) element to show if the release is accessible. This can vary depending on where the locker is being accessed from. This method must be OAuth signed.; 
    queryParameters:
      oauth_token:
        type: integer
        required: true
        description: |
                user's OAuth accesstoken
      pagesize:
        type: integer
        required: false
        description: |
                sets the number of releases that will be returned per page, the default is 10, the maximum is 50
      page:
        type: integer
        required: false
        description: |
                sets the page to be returned in paged list of the customers releases and tracks, by default this is the first page. page=1
      country:
        type: string
        required: false
        description: |
                The code of the country the end user resides in. The country will default to GB if not provided.; 
      releaseId:
        type: integer
        required: false
        description: |
                The 7digital ID of the release to be that we are interested in. You will use this to filter out and return a specific release from the user's locker. Will return an empty locker response if no match is found.
      trackId:
        type: integer
        required: false
        description: |
                ; If supplied together with the releaseId, will returned only that specific track (provided it exists in user locker).; Will return an empty locker response if no match is found.; 
      purchaseId:
        type: integer
        required: false
        description: |
                ; If supplied will return only the releases and tracks for that basket. Will return an error if no tracks are found.; 
      sort:
        type: string
        required: false
        description: |
                ; Orders the returned results. Supplied as a string in the format: "{sortColumn} {sortOrder}", for example: "purchaseDate desc" ; will show recent purchases first. Currently you can sort by releaseTitle (asc or desc), purchaseDate (asc or desc) and artistName (asc or desc). If no sort is ; supplied, the default is "releaseTitle asc". If no order is supplied the default is ascending.; 


    responses:
      200:
        body:
          application/xml:
            example: |
              <response status="ok" version="1.2">
                <locker>
                  <lockerReleases>
                    <page>1</page>
                    <pageSize>10</pageSize>
                    <totalItems>1</totalItems>
                    <lockerRelease>
                      <release id="302123">
                        <title>Original Album Classics</title>
                        <version/>
                        <type>Album</type>
                        <artist id="1194">
                          <name>Patti Smith</name>
                          <appearsAs>Patti Smith</appearsAs>
                          <url>http://www.7digital.com/artists/patti-smith/?partner=1401</url>
                        </artist>
                        <url>http://www.7digital.com/artists/patti-smith/original.../?partner=1401</url>
                        <image>http://artwork-cdn.7static.com/static/img/sleeveart/00/003/021/0000302123_50.jpg</image>
                        <releaseDate>2008-06-16T00:00:00+01:00</releaseDate>
                      </release>
                      <lockerTracks>
                        <lockerTrack>
                          <track id="3544116">
                            <title>Gloria</title>
                            <version>Digitally Remastered 1996</version>
                            <artist id="1194">
                              <name>Patti Smith</name>
                              <appearsAs>Patti Smith</appearsAs>
                              <url>http://www.7digital.com/artists/patti-smith/?partner=1401</url>
                            </artist>
                            <url>http://www.7digital.com/artists/patti-smith/original.../01-Gloria?partner=1401</url>
                          </track>
                          <remainingDownloads>355</remainingDownloads>
                          <purchaseDate>2009-07-22T11:41:41+01:00</purchaseDate>
                          <downloadUrls>
                            <downloadUrl>
                              <url>http://media.geo.7digital.com/media/user/downloadtrack...</url>
                              <format id="17">
                                <fileFormat>MP3</fileFormat>
                                <bitRate>320</bitRate>
                                <drmFree>true</drmFree>
                              </format>
                            </downloadUrl>
                          </downloadUrls>
                        </lockerTrack>
                      </lockerTracks>
                      <available>true</available>
                    </lockerRelease>
                  </lockerReleases>
                </locker>
              </response>
/user/purchase/item:

  get:
    description: |
            ; This method allows a user to purchase an item at the price as advertised on 7digital.com. It will return the download URL of each item purchased. For example, if a release consisting of multiple tracks was purchased, then the download URL of each item constituting the release will be returned.; For a user purchase to be processed, the user should already have a default debit or credit card set up for payments.; This method allows users to take advantage of 7digital.com promotional offers and is only available to selected partners building 7digital branded integrations. For white-label integrations please use user/purchase/rrpItem or user/purchase/pricedItem.; 
    queryParameters:
      oauth_token:
        type: integer
        required: true
        description: |
                user's OAuth accesstoken
      releaseId:
        type: integer
        required: true
        description: |
                The unique ID of the release being purchased. If a track is being purchased, this needs to identify the release the track appears on.
      trackId:
        type: integer
        required: false
        description: |
                The unique ID of the track being purchased. If supplied, only the track is delivered - otherwise the full release is delivered.
      price:
        type: number
        required: true
        description: |
                ; The price that has been displayed to the user prior to purchase. If the actual 7digital.com price is different to the supplied value the purchase is aborted and 3004 error message is returned instead. This is used to ensure the users cannot be charged a different amount than the advertised price (e.g. if the price was cached and/or has changed after it was displayed.); 
      country:
        type: string
        required: false
        description: |
                The code of the country the end user resides in. The country will default to GB if not provided.; 
      shopid:
        type: integer
        required: false
        description: |
                ; The shop ID that all basket items were selected from.  The shop ID will default to the 7digital UK shop if it is not provided.; If the shop ID is provided, the country parameter will be ignored.; 
      tag_*key*:
        type: string
        required: false
        description: |
                ; Additional data to be stored with successful transactions, for the purposes such as tagging affiliated or marketing information.; up to 10 tags can be stored. A tag key can be a maximum of 50 characters, and a tag value a maximum of 100 characters.; E.g. tag_MyPartner=MagazinePromoABC&tag_ApplicationVersion=1.5.; This data will only be available to API clients subscribing to customized sales reports service.; 


    responses:
      200:
        body:
          application/xml:
            example: |
              <response status="ok" version="1.2">
                <purchase id="123">
                  <purchaseDate>2009-08-10T11:00:00+01:00</purchaseDate>
                  <lockerReleases>
                    <lockerRelease>
                      <release id="1">
                        <title>Ill Communication</title>
                        <version/>
                        <type>Album</type>
                        <artist id="357">
                          <name>Beastie Boys</name>
                          <appearsAs>Beastie Boys</appearsAs>
                          <url>http://www.7digital.com/artists/beastie-boys</url>
                        </artist>
                        <url>http://www.7digital.com/artists/beastie-boys</url>
                        <image>http://artwork-cdn.7static.com/static/img/sleeveart/00/004/915/0000491573_350.jpg</image>
                      </release>
                      <lockerTracks>
                        <lockerTrack>
                          <track id="456">
                            <title>Sabotage</title>
                            <version/>
                            <artist id="0">
                              <name>Beastie Boys</name>
                              <appearsAs>Beastie Boys</appearsAs>
                              <url>http://www.7digital.com/artists/beastie-boys</url>
                            </artist>
                            <url>http://www.7digital.com/artists/beastie-boys/ill.../06-Sabotage-(2009-Digital-Remaster)/</url>
                          </track>
                          <remainingDownloads>3</remainingDownloads>
                          <purchaseDate>2009-08-10T11:00:00+01:00</purchaseDate>
                          <downloadUrls>
                            <downloadUrl>
                              <url>http://media.geo.7digital.com/media/user/downloadtrack...</url>
                              <format id="1">
                                <fileFormat>MP3</fileFormat>
                                <bitRate>320</bitRate>
                                <drmFree>true</drmFree>
                              </format>
                            </downloadUrl>
                          </downloadUrls>
                        </lockerTrack>
                      </lockerTracks>
                    </lockerRelease>
                  </lockerReleases>
                </purchase>
              </response>
/user/purchase/rrpItem:

  get:
    description: |
            ; This method allows a user to purchase an item at 7digital recommended retail price (RRP). It will return the download URL of each item purchased. For example, if a release consisting of multiple tracks was purchased, then the download URL of each item constituting the release will be returned.; For a user purchase to be processed, the user should already have a default debit or credit card set up for payments.; 
    queryParameters:
      oauth_token:
        type: integer
        required: true
        description: |
                user's OAuth accesstoken
      releaseId:
        type: integer
        required: true
        description: |
                The unique ID of the release being purchased. If a track is being purchased, this needs to identify the release the track appears on.
      trackId:
        type: integer
        required: false
        description: |
                The unique ID of the track being purchased. If supplied, only the track is delivered - otherwise the full release is delivered.
      price:
        type: number
        required: true
        description: |
                ; The price that has been displayed to the user prior to purchase. If the actual 7digital recommended retail price is different to the supplied value the purchase is aborted and 3004 error message is returned instead. This is used to ensure the users cannot be charged a different amount than the advertised price (e.g. if the price was cached and/or has changed after it was displayed.); 
      country:
        type: string
        required: false
        description: |
                ; The country that all basket items were selected from.  The country will default to UK if it is not provided.; Provide this if you are purchasing from a territory other than the UK.; 
      shopid:
        type: integer
        required: false
        description: |
                ; The shop ID that all basket items were selected from.  The shop ID will default to the 7digital UK shop if it is not provided.; If the shop ID is provided, the country parameter will be ignored.; 
      tag_*key*:
        type: string
        required: false
        description: |
                ; Additional data to be stored with successful transactions, for the purposes such as tagging affiliated or marketing information.; up to 10 tags can be stored. A tag key can be a maximum of 50 characters, and a tag value a maximum of 100 characters.; E.g. tag_MyPartner=MagazinePromoABC&tag_ApplicationVersion=1.5.; This data will only be available to API clients subscribing to customized sales reports service.; 


    responses:
      200:
        body:
          application/xml:
            example: |
              <response status="ok" version="1.2">
                <purchase id="123">
                  <purchaseDate>2009-08-10T11:00:00+01:00</purchaseDate>
                  <lockerReleases>
                    <lockerRelease>
                      <release id="1">
                        <title>Ill Communication</title>
                        <version/>
                        <type>Album</type>
                        <artist id="357">
                          <name>Beastie Boys</name>
                          <appearsAs>Beastie Boys</appearsAs>
                          <url>http://www.7digital.com/artists/beastie-boys</url>
                        </artist>
                        <url>http://www.7digital.com/artists/beastie-boys</url>
                        <image>http://artwork-cdn.7static.com/static/img/sleeveart/00/004/915/0000491573_350.jpg</image>
                      </release>
                      <lockerTracks>
                        <lockerTrack>
                          <track id="456">
                            <title>Sabotage</title>
                            <version/>
                            <artist id="0">
                              <name>Beastie Boys</name>
                              <appearsAs>Beastie Boys</appearsAs>
                              <url>http://www.7digital.com/artists/beastie-boys</url>
                            </artist>
                            <url>http://www.7digital.com/artists/beastie-boys/ill.../06-Sabotage-(2009-Digital-Remaster)/</url>
                          </track>
                          <remainingDownloads>3</remainingDownloads>
                          <purchaseDate>2009-08-10T11:00:00+01:00</purchaseDate>
                          <downloadUrls>
                            <downloadUrl>
                              <url>http://media.geo.7digital.com/media/user/downloadtrack...</url>
                              <format id="1">
                                <fileFormat>MP3</fileFormat>
                                <bitRate>320</bitRate>
                                <drmFree>true</drmFree>
                              </format>
                            </downloadUrl>
                          </downloadUrls>
                        </lockerTrack>
                      </lockerTracks>
                    </lockerRelease>
                  </lockerReleases>
                </purchase>
              </response>
/user/purchase/basket:

  get:
    description: |
            ; This method allows a user to purchase a basket with items that have been added via basket/additem or basket/addpriceditem. It will return the download URL of each item purchased. For example, if a release consisting of multiple tracks was purchased, then the download URL of each item constituting the release will be returned.; If total amount due for a basket is greater than 0, the user will need to have a valid debit or credit card set up for payments otherwise a 300X error will be returned. Upon receiving a 300X error you should redirect the user to a new payment method registration screen (see Adding a payment card); 
    queryParameters:
      oauth_token:
        type: integer
        required: true
        description: |
                user's OAuth accesstoken
      basketid:
        type: string
        required: true
        description: |
                This is the session ID for the basket that contains the items to purchase.  This is the basketid returned from basket/create.
      country:
        type: string
        required: false
        description: |
                ; The country that all basket items were selected from.  The country will default to UK if it is not provided.; Provide this if you are purchasing from a territory other than the UK.; 
      shopid:
        type: integer
        required: false
        description: |
                ; The shop ID that all basket items were selected from.  The shop ID will default to the 7digital UK shop if it is not provided.; If the shop ID is provided, the country parameter will be ignored.; 
      tag_*key*:
        type: string
        required: false
        description: |
                ; Additional data to be stored with successful transactions, for the purposes such as tagging affiliated or marketing information.; up to 10 tags can be stored. A tag key can be a maximum of 50 characters, and a tag value a maximum of 100 characters.; E.g. tag_MyPartner=MagazinePromoABC&tag_ApplicationVersion=1.5.; This data will only be available to API clients subscribing to customized sales reports service.; 


    responses:
      200:
        body:
          application/xml:
            example: |
              <response status="ok" version="1.2">
                <purchase id="123">
                  <purchaseDate>2009-08-10T11:00:00+01:00</purchaseDate>
                  <lockerReleases>
                    <lockerRelease>
                      <release id="1">
                        <title>Ill Communication</title>
                        <version/>
                        <type>Album</type>
                        <artist id="357">
                          <name>Beastie Boys</name>
                          <appearsAs>Beastie Boys</appearsAs>
                          <url>http://www.7digital.com/artists/beastie-boys</url>
                        </artist>
                        <url>http://www.7digital.com/artists/beastie-boys</url>
                        <image>http://artwork-cdn.7static.com/static/img/sleeveart/00/004/915/0000491573_350.jpg</image>
                      </release>
                      <lockerTracks>
                        <lockerTrack>
                          <track id="456">
                            <title>Sabotage</title>
                            <version/>
                            <artist id="0">
                              <name>Beastie Boys</name>
                              <appearsAs>Beastie Boys</appearsAs>
                              <url>http://www.7digital.com/artists/beastie-boys</url>
                            </artist>
                            <url>http://www.7digital.com/artists/beastie-boys/ill-communication-remastered-version/06-Sabotage-(2009-Digital-Remaster)/</url>
                          </track>
                          <remainingDownloads>3</remainingDownloads>
                          <purchaseDate>2009-08-10T11:00:00+01:00</purchaseDate>
                          <downloadUrls>
                            <downloadUrl>
                              <url>http://media.geo.7digital.com/media/user/downloadtrack?formatid=1&amp;oauth_consumer_key=YOUR_KEY_HERE&amp;...</url>
                              <format id="1">
                                <fileFormat>MP3</fileFormat>
                                <bitRate>320</bitRate>
                                <drmFree>true</drmFree>
                              </format>
                            </downloadUrl>
                          </downloadUrls>
                        </lockerTrack>
                        <lockerTrack>
                          <track id="789">
                            <title>Root Down</title>
                            <version/>
                            <artist id="0">
                              <name>Beastie Boys</name>
                              <appearsAs>Beastie Boys</appearsAs>
                              <url>http://www.7digital.com/artists/beastie-boys</url>
                            </artist>
                            <url>http://www.7digital.com/artists/beastie-boys/ill-communication-remastered-version/05-Root-Down-(2009-Digital-Remaster)/</url>
                          </track>
                          <remainingDownloads>3</remainingDownloads>
                          <purchaseDate>2009-08-10T11:00:00+01:00</purchaseDate>
                          <downloadUrls>
                            <downloadUrl>
                              <url>http://media.geo.7digital.com/media/user/downloadtrack?formatid=1&amp;oauth_consumer_key=YOUR_KEY_HERE&amp;...</url>
                              <format id="1">
                                <fileFormat>MP3</fileFormat>
                                <bitRate>320</bitRate>
                                <drmFree>true</drmFree>
                              </format>
                            </downloadUrl>
                          </downloadUrls>
                        </lockerTrack>
                      </lockerTracks>
                    </lockerRelease>
                  </lockerReleases>
                </purchase>
              </response>
/basket/addpriceditem:

  get:
    description: |
            ; This method allows an item to be added to a basket with a specified price. The specified price can be higher or lower than the 7digital catalogue price, including a price of 0.00 to make an item free.; For a full description of the basket responses, please refer to the Basket API section in the 7digital public API documentation.; 
    queryParameters:
      basketId:
        type: string
        required: true
        description: |
                The unique identifier of the basket generated by the basket/create method
      price:
        type: number
        required: true
        description: |
                ; The custom price for the item to add to the basket e.g. "11.95".; The price cannot be negative and must not be more than 2 decimal places. The price should not include any commas (",").; 
      releaseId:
        type: integer
        required: true
        description: |
                The unique identifier of the release
      trackId:
        type: integer
        required: false
        description: |
                The unique identifier of the track. If supplied, you must also supply the releaseId that the track belongs to.


    responses:
      200:
        body:
          application/xml:
            example: |
              <response status="ok" version="1.2">
                <basket id="00000000-0000-0000-0000-000000000000">
                  <itemCount>1</itemCount>
                    <price> 
                      <currency code="GBP">¬£</currency> 
                      <value>12.3</value> 
                      <formattedPrice>¬£12.30</formattedPrice> 
                    </price>
                    <amountDue> 
                      <currency code="GBP">¬£</currency> 
                      <value>12.3</value> 
                      <formattedAmount>¬£12.30</formattedAmount> 
                    </amountDue>
                    <basketItems>
                      <basketItem id="17590164"> 
                        <type>release</type> 
                        <itemName>Even Better Than The Real Thing (Remix)</itemName>
                        <artistName>U2</artistName>
                        <trackId></trackId>
                        <releaseId>123</releaseId>
                        <price> 
                          <value>12.3</value> 
                          <formattedPrice>¬£12.30</formattedPrice> 
                        </price>
                        <amountDue> 
                          <value>12.3</value> 
                          <formattedAmount>¬£12.30</formattedAmount> 
                        </amountDue>
                      </basketItem> 
                  </basketItems>
                </basket>
              </response>
/user/purchase/priceditem:

  get:
    description: |
            ; This method allows a user to purchase a product or track at a specified price.  The specified price can be higher or lower than the 7digital catalogue price, including a price of 0.00 to make an item free.; It will return the download URL of each item purchased. For example, if a release consisting of multiple tracks was purchased, then the download URL of each item constituting the release will be returned.; The user should already have a default debit or credit card set up for payments.; 
    queryParameters:
      oauth_token:
        type: string
        required: true
        description: |
                user's OAuth accesstoken
      price:
        type: number
        required: true
        description: |
                ; The custom price for the item to add to the basket e.g. "11.95".; The price cannot be negative and must not be more than 2 decimal places. The price should not include any commas (",").; 
      releaseId:
        type: integer
        required: true
        description: |
                The unique ID of the release being purchased. If a track is being purchased, this needs to identify the release the track appears on.
      trackId:
        type: integer
        required: false
        description: |
                The unique ID of the track being purchased. If supplied, only the track is delivered - otherwise the full release is delivered.
      country:
        type: string
        required: false
        description: |
                ; The country that all basket items were selected from.  The country will default to UK if it is not provided.; Provide this if you are purchasing from a territory other than the UK.; 
      shopid:
        type: integer
        required: false
        description: |
                ; The shop ID that all basket items were selected from.  The shop ID will default to the 7digital UK shop if it is not provided.; If the shop ID is provided, the country parameter will be ignored.; 


    responses:
      200:
        body:
          application/xml:
            example: |
              
              <response status="ok" version="1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://localhost/api/static/7digitalAPI.xsd">
                <purchase id="49193524">
                  <purchaseDate>2009-11-25T18:29:08Z</purchaseDate>
                  <lockerReleases>
                    <lockerRelease>
                      <release id="10147">
                        <title>Siamese Dream</title>
                        <version />
                        <type>Album</type>
                        <artist id="7041">
                          <name>The Smashing Pumpkins</name>
                          <appearsAs>The Smashing Pumpkins</appearsAs>
                          <url>http://www.7digital.com/artists/the-smashing-pumpkins/?partner=1401</url>
                        </artist>
                        <url>http://www.7digital.com/artists/the-smashing-pumpkins/siamese-dream/?partner=1401</url>
                        <image>http://artwork-cdn.7static.com/static/img/sleeveart/00/000/101/0000010147_50.jpg</image>
                        <releaseDate>2005-04-05T00:00:00+01:00</releaseDate>
                      </release>
                      <lockerTracks>
                        <lockerTrack>
                          <track id="103818">
                            <title>Cherub Rock</title>
                            <version />
                            <artist id="7041">
                              <name>The Smashing Pumpkins</name>
                              <appearsAs>The Smashing Pumpkins</appearsAs>
                              <url>http://www.7digital.com/artists/the-smashing-pumpkins/?partner=1401</url>
                            </artist>
                            <url>http://www.7digital.com/artists/the-smashing-pumpkins/siamese-dream/01-Cherub-Rock?partner=1401&partner=1401</url>
                          </track>
                          <remainingDownloads>225</remainingDownloads>
                          <purchaseDate>2009-11-24T14:51:56Z</purchaseDate>
                          <downloadUrls>
                            <downloadUrl>
                              <url>http://media.geo.7digital.com/media/user/downloadtrack?formatid=17&oauth_consumer_key=test-api-extUsers&oauth_nonce=5954041&oauth_signature_method=HMAC-SHA1&oauth_timestamp=1259173749&oauth_token=12345678&releaseid=10147&shopid=34&trackid=103818&oauth_signature=FAo3MI%2Bn%2FoVjm7AX8GJ2otA3fp8%3D</url>
                              <format id="17">
                                <fileFormat>MP3</fileFormat>
                                <bitRate>320</bitRate>
                                <drmFree>true</drmFree>
                              </format>
                            </downloadUrl>
                          </downloadUrls>
                        </lockerTrack>
                      </lockerTracks>
                    </lockerRelease>
                  </lockerReleases>
                </purchase>
              </response>
/user/deliveritem:

  get:
    description: |
            ; This method will deliver a track or release to user and return a purchase id identifying the transaction at 7digital's end and release and track information along with download URL for each track from the transaction.; 
    queryParameters:
      oauth_token:
        type: string
        required: true
        description: |
                user's OAuth accesstoken
      emailAddress:
        type: string
        required: false
        description: |
                The email address of the User.
      releaseId:
        type: integer
        required: true
        description: |
                The 7digital ID of the release being delivered to the user. If a track is being delivered, this needs to identify the release the track appears on.
      trackId:
        type: integer
        required: false
        description: |
                If supplied, only the track is delivered - otherwise the full release is delivered.
      country/shopId:
        type: string
        required: false
        description: |
                ; A Country Code needs to be provided if you are delivering content from a 7digital international shop. Provide a shop ID if you have a dedicated pool of content and you have been assigned a shop ID by 7digital.; 
      transactionId:
        type: string
        required: true
        description: |
                The transaction ID provided will be stored along with a 7digital purchase ID in the 7digital transactions log.
      retailPrice:
        type: number
        required: false
        description: |
                Compulsory if you are charging your users different prices than 7digital RRP. If you're giving away items for free please use retailPrice=0, if you're using vouchers or you're not sure what to report please contact our sales team.


    responses:
      200:
        body:
          application/xml:
            example: |
              <response status="ok" version="1.2">
                <purchase id="50454737">
                  <purchaseDate>2009-11-10T14:59:39Z</purchaseDate>
                  <lockerReleases>
                    <lockerRelease>
                      <release id="415019">
                        <title>Perfect Symmetry</title>
                        <version>US Album</version>
                        <type>Album</type>
                        <artist id="1">
                          <name>Keane</name>
                          <appearsAs>Keane</appearsAs>
                          <url>http://us.7digital.com/artists/keane/</url>
                        </artist>
                        <url>http://us.7digital.com/artists/keane/perfect-symmetry-6/</url>
                        <image>http://artwork-cdn.7static.com/static/img/sleeveart/00/004/150/0000415019_50.jpg</image>
                        <releaseDate>2008-10-14T00:00:00+01:00</releaseDate>
                      </release>
                      <lockerTracks>
                        <lockerTrack>
                          <track id="4648051">
                            <title>Spiralling</title>
                            <version></version>
                            <artist id="1">
                              <name>Keane</name>
                              <appearsAs>Keane</appearsAs>
                              <url>http://us.7digital.com/artists/keane/</url>
                            </artist>
                            <url>http://us.7digital.com/artists/keane/perfect-symmetry-6/01-Spiralling/</url>
                          </track>
                          <remainingDownloads>15</remainingDownloads>
                          <purchaseDate>2009-11-10T14:47:11Z</purchaseDate>
                          <downloadUrls>
                            <downloadUrl>
                              <url>
                                http://media.geo.7digital.com/media/user/downloadtrack?formatid=17&amp;
                              </url>
                                <format id="17">
                                  <fileFormat>MP3</fileFormat>
                                  <bitRate>320</bitRate>
                                  <drmFree>true</drmFree>
                                </format>
                              </downloadUrl>
                          </downloadUrls>
                        </lockerTrack>
                      </lockerTracks>
                    </lockerRelease>
                  </lockerReleases>
                </purchase>
              </response>
/user/purchase/{purchaseid}/release/{releaseid}:

  delete:
    description: |
            ; This method allows a user to remove a purchase of a release from the sales report when the purchase has been refunded.; It will return the purchase id and the release id of the item remvoved.          ; 
    queryParameters:
      purchaseid:
        type: integer
        required: true
        description: |
                purchase id identifying the transaction at 7digital's end that the refunded item belongs to
      releaseId:
        type: integer
        required: true
        description: |
                ; The 7digital id of the release being refunded; 


    responses:
      200:
        body:
          application/xml:
            example: |
              
              <response status="ok" version="1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://localhost/api/static/7digitalAPI.xsd">
                <release>      
                  <purchaseId>49193524</purchaseId>
                  <releaseId>87654</releaseId>
                </release>
              </response>
          application/json:
            example: |  
              
                {
                  "status":"ok",
                  "version":"1.2",
                  "purchaseId": "49193524"
                   "releaseId": "87654"
                  }
                }
              
/user/purchase/{purchaseid}/track/{trackid}:

  delete:
    description: |
            ; This method allows a user to remove a purchase of a track from the sales report when the purchase has been refunded.; It will return the purchase id and the track id of the item remvoved.          ; 
    queryParameters:
      purchaseid:
        type: integer
        required: true
        description: |
                purchase id identifying the transaction at 7digital's end that the refunded item belongs to
      trackid:
        type: integer
        required: true
        description: |
                ; The 7digital id of the track being refunded; 


    responses:
      200:
        body:
          application/xml:
            example: |
              
              <response status="ok" version="1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://localhost/api/static/7digitalAPI.xsd">
                <track>      
                  <purchaseId>49193524</purchaseId>
                  <trackId>87654</trackId>
                </track>
              </response>
          application/json:
            example: |  
              
                {
                  "status":"ok",
                  "version":"1.2",
                  "purchaseId": "49193524"
                   "trackId": "87654"
                  }
                }
              
/stream/subscription:

  get:
    description: |
            ; Allows user to stream any track available for streaming in their region, as long as they have a valid subscription account already set up with our subscription system (billed either by 7digital or your system).; This endpoint should only be used when a given device is actively connected to the Internet. Download speeds are throttled to match track play speeds. For unthrottled local caching in bulk, to be used for offline plays, see offline/subscription.; Tracks can be cached (in an encrypted format) on the end user's device, but all plays from either the cache or live must be reported with the user/subscription/log endpoint.; When the clientId parameter is supplied, mulitple devices will not be allowed to stream concurrently. Device A can start streaming, but if Device B starts, Device A will finish its current track then be blocked from playing again for a short time period. After that time period, Device A can play again, and Device B will become blocked.; Endpoint's full location: https://stream.svc.7digital.net/stream/subscription; 
    queryParameters:
      oauth_token:
        type: string
        required: true
        description: |
                User's OAuth access token.
      trackId:
        type: integer
        required: true
        description: |
                The 7digital ID of the track to be streamed.
      formatId:
        type: integer
        required: true
        description: |
                The 7digital ID of the format requested. Please contact us for available formats.
      clientId:
        type: string
        required: false
        description: |
                A unique identifier for the current device streaming the track. Generally a music label requirement, this will allow us to block multiple devices from streaming on the same user account (see above for more information).
      country:
        type: string
        required: false
        description: |
                Two character country code. If not supplied, this request will default to GB.


    responses:
      200:
        body:
          application/xml:
            example: |
              HTTP/1.1 200 OK
              Date: Thu, 19 Nov 2009 11:27:47 GMT
              Content-Length: 7256280
              Content-Type: audio/mpeg
/stream/catalogue:

  get:
    description: |
            ; Allows user to stream any track in the 7digital catalogue available in their region. This endpoint is designed for radio style play where individual tracks cannot be selected by the user (i.e. not "on-demand" streaming), and is licensed differently than other streaming endpoints.; Tracks can be cached (in an encrypted format) on the end user's device, but all plays from either the cache or live must be reported with the catalogue/log endpoint. Please contact us for more details.; Endpoint's full location: https://stream.svc.7digital.net/stream/catalogue; 
    queryParameters:
      oauth_token / userId:
        type: string
        required: true
        description: |
                If you hold a 7digital oauth access token for the user streaming the track this needs to be provided. If not, you can pass your own identifier of the user (ID, GUID, username, etc). For streaming services that don't require users to sign, please contact us for alternative options of providing user identification (e.g. device IDs, autogenerated IDs stored in a cookie).
      trackId:
        type: integer
        required: true
        description: |
                The 7digital ID of the track to be streamed.
      formatId:
        type: integer
        required: true
        description: |
                The 7digital ID of the format requested. Please contact us for available formats.
      country:
        type: string
        required: false
        description: |
                Two character country code. If not supplied, this request will default to GB.


    responses:
      200:
        body:
          application/xml:
            example: |
              HTTP/1.1 200 OK
              Date: Thu, 19 Nov 2009 11:27:47 GMT
              Content-Length: 7256280
              Content-Type: audio/mpeg
/stream/locker:

  get:
    description: |
            ; Allows user to stream a previously purchased track from their locker.  ; This endpoint can be used for online plays or offline caching (for plays when the device isn't connected to the Internet).; Endpoint's full location: https://stream.svc.7digital.net/stream/locker; 
    queryParameters:
      oauth_token:
        type: string
        required: true
        description: |
                User's OAuth access token.
      trackId:
        type: integer
        required: true
        description: |
                The 7digital ID of the track to be streamed.
      formatId:
        type: integer
        required: true
        description: |
                The 7digital ID of the format requested. Please contact us for available formats.
      country:
        type: string
        required: false
        description: |
                Two character country code. If not supplied, this request will default to GB.


    responses:
      200:
        body:
          application/xml:
            example: |
              HTTP/1.1 200 OK
              Date: Thu, 19 Nov 2009 11:27:47 GMT
              Content-Length: 7256280
              Content-Type: audio/mpeg
/offline/subscription:

  get:
    description: |
            ; Allows user to stream any track available for streaming in their region, as long as they have a valid subscription account already set up with our subscription system and their device is registered for offline play with the user/unlimitedStreaming/offline endpoint.; This endpoint will not throttle download speeds and should only be used when a given device is caching for offline track play (where it won't be connected to the Internet).; All plays done during offline mode must be reported to the user/subscription/log endpoint as soon as Internet connectivity is restored.; Endpoint's full location: https://stream.svc.7digital.net/offline/subscription; 
    queryParameters:
      oauth_token:
        type: string
        required: true
        description: |
                User's OAuth access token.
      trackId:
        type: integer
        required: true
        description: |
                The 7digital ID of the track to be streamed.
      formatId:
        type: integer
        required: true
        description: |
                The 7digital ID of the format requested. Please contact us for available formats.
      clientId:
        type: string
        required: true
        description: |
                A unique identifier for the current device streaming the track. This should be the same clientId used to register the device for offline play with the user/unlimitedStreaming/offline endpoint.
      country:
        type: string
        required: false
        description: |
                Two character country code. If not supplied, this request will default to GB.


    responses:
      200:
        body:
          application/xml:
            example: |
              HTTP/1.1 200 OK
              Date: Thu, 19 Nov 2009 11:27:47 GMT
              Content-Length: 7256280
              Content-Type: audio/mpeg
/user/unlimitedStreaming/offline:

  post:
    description: |
            ; Used to authorise a device for offline mode. After authorised, a device can download in bulk from the offline/subscription endpoint.; The POST body can be sent in either XML or JSON formats.; 
    queryParameters:
      oauth_token:
        type: string
        required: true
        description: |
                User's OAuth access token.
      clientId:
        type: integer
        required: true
        description: |
                A unique identifier for the current device wanting to go offline.
      offlineEnabled:
        type: boolean
        required: true
        description: |
                true if the device is being enabled for offline streaming, false if it's being disabled.
      country:
        type: string
        required: true
        description: |
                The code of the country the end user resides in.


    responses:
      200:
        body:
          application/xml:
            example: |
              <response status=‚Äùok‚Äù version=‚Äù1.2‚Äù>
              	<offlineStatus>
              		<offlineEnabled>true</offlineEnabled>
              		<offlineMaxTrackCount>4000</offlineMaxTrackCount>
              	</offlineStatus>
              </response>
  get:
    description: |
            ; Used to check the offline status of a specified device. This status can be changed with a POST to the user/unlimitedStreaming/offline endpoint.; 
    queryParameters:
      oauth_token:
        type: string
        required: true
        description: |
                User's OAuth access token.
      clientId:
        type: integer
        required: true
        description: |
                A unique identifier for the current device you're checking the offline status of.


    responses:
      200:
        body:
          application/xml:
            example: |
              <response status=‚Äùok‚Äù version=‚Äù1.2‚Äù>
              	<offlineStatus>
              		<offlineEnabled>true</offlineEnabled>
              		<offlineMaxTrackCount>4000</offlineMaxTrackCount>
              	</offlineStatus>
              </response>
/user/offlineclients:

  get:
    description: |
            ; Used to get list of all user's registered devices.; 
    queryParameters:
      oauth_token:
        type: string
        required: true
        description: |
                User's OAuth access token.


    responses:
      200:
        body:
          application/xml:
            example: |
              <response status=‚Äùok‚Äù version=‚Äù1.2‚Äù>
                <offlineClients>
                  <offlineClient>
                    <clientId>BD0A351C-4265-49A4-A80F-D10C5F56EC3E</clientId>
                  </offlineClient>
                  <offlineClient>
                    <clientId>8B91B97A-3214-4D17-B2A4-325E8CAB88B5</clientId>
                  </offlineClient>
                </offlineClients>
              </response>
/user/subscription/log:

  post:
    description: |
            ; Multiple plays can be batched by user into a single POST to this endpoint, and the body can be sent in either XML or JSON formats.; Streams that are requested as part of pre-fetching functionality, but never played on the device, should still be logged with a zero second play time.; Situations on when you should and should not log to this endpoint:; Plays from stream/subscription:; Online from our servers: log using this endpoint; Cached on the device (after playing once from our servers): log using this endpoint; Plays from offline/subscription:; Online from our servers (being downloaded for later play, not actively playing from this endpoint): do not log; Cached on the device (after downloading once from our servers): log using this endpoint; Plays from stream/locker:; Online from our servers: do not log; Cached on the device (after playing once from our servers): do not log; 
    queryParameters:
      oauth_token / userid:
        type: string
        required: true
        description: |
                User's OAuth access token or user id, depending how your API key is setup.
      country:
        type: string
        required: true
        description: |
                The 2 letter ISO country code, as with our other endpoints. Should be the country where the user originated the stream from (e.g. set to US if the stream was played by a US user). Please note it can only be placed as a query string parameter, not in the POST body, or authorisation headers if those are used.
      trackId:
        type: integer
        required: true
        description: |
                The 7digital ID of the track that was streamed.
      releaseId:
        type: integer
        required: true
        description: |
                The 7digital ID of the release that was streamed.
      formatId:
        type: integer
        required: true
        description: |
                The 7digital ID of the format streamed.
      userAgent:
        type: string
        required: true
        description: |
                Details of the device model and application version used to play the track.
      dateTimePlayed:
        type: string
        required: true
        description: |
                The date and time when the track was played. Should be in the ISO 8601 format.
      totalTimePlayed:
        type: string
        required: true
        description: |
                The total time the track was streamed in seconds (or 0 if it was only pre-fetched and never played).
      playMode:
        type: string
        required: true
        description: |
                Either "online", "offline", or "online-cached". Indicates if the play was with an active or inactive network connection and, if the network connection is active, whether or not it was read from the device cache.


    responses:
      200:
        body:
          application/xml:
            example: |
              <response status="ok" version="1.2">
                 <playLogs>
                     <count>2</count>
                 </playLogs>
              </response>
/catalogue/log:

  post:
    description: |
            ; Multiple plays can be batched into a single POST to this endpoint, and the body can be sent in either XML or JSON formats.; Streams that are requested as part of pre-fetching functionality, but never played on the device, should still be logged with a zero second play time.; Situations on when you should log to this endpoint:; Plays from stream/catalogue:; Online from our servers: log using this endpoint; Cached on the device (after playing once from our servers): log using this endpoint; 
    queryParameters:
      country:
        type: string
        required: false
        description: |
                The 2 letter ISO country code, as with our other endpoints. Should be the country where the user originated the stream from (e.g. set to US if the stream was played by a US user). Please note it can only be placed as a query string parameter, not in the POST body, or authorisation headers if those are used.
      trackId:
        type: integer
        required: true
        description: |
                The 7digital ID of the track that was streamed.
      releaseId:
        type: integer
        required: true
        description: |
                The 7digital ID of the release that was streamed.
      formatId:
        type: integer
        required: true
        description: |
                The 7digital ID of the format streamed.
      userAgent:
        type: string
        required: true
        description: |
                Details of the device model and application version used to play the track.
      dateTimePlayed:
        type: string
        required: true
        description: |
                The date and time when the track was played. Should be in the ISO 8601 format.
      totalTimePlayed:
        type: string
        required: true
        description: |
                The total time the track was streamed in seconds (or 0 if it was only pre-fetched and never played).
      userId:
        type: string
        required: false
        description: |
                The identifier of the user that played that track. Please note this must be in the body and is not a user id for authorisation purposes (as this endpoint is 2-leg OAuth signed). It's just for reporting purposes.


    responses:
      200:
        body:
          application/xml:
            example: |
              <response status="ok" version="1.2">
                 <playLogs>
                     <count>2</count>
                 </playLogs>
              </response>
/user/downloadtrack:

  get:
    description: |
            ; Allows the user to download a purchased track.; Endpoint's full location: http://media.geo.7digital.com/media/user/downloadtrack; 
    queryParameters:
      oauth_token:
        type: string
        required: true
        description: |
                User's OAuth access token.
      trackId:
        type: integer
        required: true
        description: |
                The 7digital ID of the track to be downloaded.
      releaseId:
        type: integer
        required: true
        description: |
                The 7digital ID of the release the track that is being delivered appears on.
      formatId:
        type: integer
        required: true
        description: |
                The 7digital ID of the format requested (from the list provided for each track by the purchasing API or locker response).
      errorUrl:
        type: string
        required: false
        description: |
                URL encoded callback URL in the event of an error.


    responses:
      200:
        body:
          application/xml:
            example: |
              HTTP/1.1 200 OK
              Date: Thu, 19 Nov 2009 11:27:47 GMT
              Content-Length: 7256280
              Content-Disposition: attachment; filename="David Hasselhoff - Jump In My Car.mp3";
              Content-Type: audio/mpeg
              
/user/download/release:

  get:
    description: |
            ; Allows a user to download tracks in a purchased release as a single ZIP file.; Endpoint's full location: http://media.geo.7digital.com/media/user/download/release; 
    queryParameters:
      oauth_token:
        type: string
        required: true
        description: |
                User's OAuth access token.
      releaseId:
        type: integer
        required: true
        description: |
                The 7digital ID of the previously purchased release by the user to be downloaded.
      formatId:
        type: integer
        required: false
        description: |
                The 7digital ID of the format requested (from the list provided for each track by the purchasing API or locker response).


    responses:
      200:
        body:
          application/xml:
            example: |
              HTTP/1.1 200 OK
              Date: Thu, 19 Nov 2009 11:27:47 GMT
              Content-Length: 7256280
              Content-Disposition: attachment; filename="Dardem - Nada.zip";
              Content-Type: application/zip
              
/user/download/purchase:

  get:
    description: |
            ; Allows a user to download tracks purchased in a transaction as a single ZIP file. The highest quality available for each track will be used.; Endpoint's full location: http://media.geo.7digital.com/media/user/download/purchase; 
    queryParameters:
      oauth_token:
        type: string
        required: true
        description: |
                User's OAuth access token.
      purchaseId:
        type: integer
        required: true
        description: |
                This is the 7digital ID of the purchase as returned by the user/purchase/* or user/deliveritem methods.


    responses:
      200:
        body:
          application/xml:
            example: |
              HTTP/1.1 200 OK
              Date: Thu, 19 Nov 2009 11:27:47 GMT
              Content-Length: 7256280
              Content-Disposition: attachment; filename="7digital_Downloads_21-10-2010.zip";
              Content-Type: application/zip
              
/clip/{trackId}:

  get:
    description: |
            ; If authorisation is successful the bytes for the clip will be returned to the client. Request url should not be stored for reuse since it expires.; Endpoint's full location: http://previews.7digital.com/clip; 
    queryParameters:
      trackId:
        type: integer
        required: true
        description: |
                The 7digital ID of the track.
      country:
        type: string
        required: true
        description: |
                2 letter ISO country code where the play originates. Used for store access and label reporting.


    responses:
      200:
        body:
          application/xml:
            example: |
              HTTP/1.1 200 OK
              Content-Length: 240534
              Content-Type: audio/mpeg
/countries:

  get:
    description: |
            List of countries with their languages and shop urls. If a country has multiple languages, the primary 7digital shop for that country is returned as the main country url. The first language in the languages list will also be the language for that primary shop. Additional language entries are then returned in alphabetical order by localName.

    responses:
      200:
        body:
          application/xml:
            example: |
              <response status="ok" version="1.2">
                <countries>
                  <country code="BE">
                    <url>http://nl-be.7digital.com</url>
                    <name>Belgium</name>
                    <localName>Belgi√´/Belgique</localName>
                    <languages>
                       <language>
                         <name>Dutch</name>
                         <localName>Nederlands</localName>
                         <url>http://nl-be.7digital.com</url>
                       </language>
                       <language>
                         <name>French</name>
                         <localName>Fran√ßais</localName>
                         <url>http://fr-be.7digital.com</url>
                       </language>
                    </languages>
                  </country>
                  <country code="CA">
                    <url>http://ca.7digital.com</url>
                    <name>Canada</name>
                    <localName>Canada</localName>
                    <languages>
                      <language>
                        <name>English</name>
                        <localName>English</localName>
                        <url>http://ca.7digital.com</url>
                      </language>
                      <language>
                        <name>French</name>
                        <localName>Fran√ßais</localName>
                        <url>http://fr-ca.7digital.com</url>
                      </language>
                    </languages>
                  </country>
                  <country code="DE">
                    <url>http://de.7digital.com</url>
                    <name>Germany</name>
                    <localName>Deutschland</localName>
                    <languages>
                      <language>
                        <name>German</name>
                        <localName>Deutsch</localName>
                        <url>http://de.7digital.com</url>
                      </language>
                    </languages>
                  </country>
                </countries>
              </response>